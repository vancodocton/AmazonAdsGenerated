/*
 * Sponsored Products
 *
 *  
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Amazon.Advertising.SponsoredProducts.Client.OpenAPIDateConverter;

namespace Amazon.Advertising.SponsoredProducts.Model
{
    /// <summary>
    /// SponsoredProductsCreateDraftKeyword
    /// </summary>
    [DataContract(Name = "SponsoredProductsCreateDraftKeyword")]
    public partial class SponsoredProductsCreateDraftKeyword : IEquatable<SponsoredProductsCreateDraftKeyword>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets MatchType
        /// </summary>
        [DataMember(Name = "matchType", EmitDefaultValue = false)]
        public SponsoredProductsCreateOrUpdateMatchType? MatchType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SponsoredProductsCreateDraftKeyword" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SponsoredProductsCreateDraftKeyword() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SponsoredProductsCreateDraftKeyword" /> class.
        /// </summary>
        /// <param name="nativeLanguageKeyword">The unlocalized draft keyword text in the preferred locale of the advertiser..</param>
        /// <param name="nativeLanguageLocale">The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES..</param>
        /// <param name="campaignId">entity object identifier (required).</param>
        /// <param name="matchType">matchType.</param>
        /// <param name="bid">Bid associated with this draft keyword. Applicable to biddable match types only.</param>
        /// <param name="adGroupId">entity object identifier (required).</param>
        /// <param name="keywordText">The draft keyword text. (required).</param>
        public SponsoredProductsCreateDraftKeyword(string nativeLanguageKeyword = default(string), string nativeLanguageLocale = default(string), string campaignId = default(string), SponsoredProductsCreateOrUpdateMatchType? matchType = default(SponsoredProductsCreateOrUpdateMatchType?), double bid = default(double), string adGroupId = default(string), string keywordText = default(string))
        {
            // to ensure "campaignId" is required (not null)
            if (campaignId == null)
            {
                throw new ArgumentNullException("campaignId is a required property for SponsoredProductsCreateDraftKeyword and cannot be null");
            }
            this.CampaignId = campaignId;
            // to ensure "adGroupId" is required (not null)
            if (adGroupId == null)
            {
                throw new ArgumentNullException("adGroupId is a required property for SponsoredProductsCreateDraftKeyword and cannot be null");
            }
            this.AdGroupId = adGroupId;
            // to ensure "keywordText" is required (not null)
            if (keywordText == null)
            {
                throw new ArgumentNullException("keywordText is a required property for SponsoredProductsCreateDraftKeyword and cannot be null");
            }
            this.KeywordText = keywordText;
            this.NativeLanguageKeyword = nativeLanguageKeyword;
            this.NativeLanguageLocale = nativeLanguageLocale;
            this.MatchType = matchType;
            this.Bid = bid;
        }

        /// <summary>
        /// The unlocalized draft keyword text in the preferred locale of the advertiser.
        /// </summary>
        /// <value>The unlocalized draft keyword text in the preferred locale of the advertiser.</value>
        [DataMember(Name = "nativeLanguageKeyword", EmitDefaultValue = false)]
        public string NativeLanguageKeyword { get; set; }

        /// <summary>
        /// The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
        /// </summary>
        /// <value>The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.</value>
        [DataMember(Name = "nativeLanguageLocale", EmitDefaultValue = false)]
        public string NativeLanguageLocale { get; set; }

        /// <summary>
        /// entity object identifier
        /// </summary>
        /// <value>entity object identifier</value>
        [DataMember(Name = "campaignId", IsRequired = true, EmitDefaultValue = true)]
        public string CampaignId { get; set; }

        /// <summary>
        /// Bid associated with this draft keyword. Applicable to biddable match types only
        /// </summary>
        /// <value>Bid associated with this draft keyword. Applicable to biddable match types only</value>
        [DataMember(Name = "bid", EmitDefaultValue = false)]
        public double Bid { get; set; }

        /// <summary>
        /// entity object identifier
        /// </summary>
        /// <value>entity object identifier</value>
        [DataMember(Name = "adGroupId", IsRequired = true, EmitDefaultValue = true)]
        public string AdGroupId { get; set; }

        /// <summary>
        /// The draft keyword text.
        /// </summary>
        /// <value>The draft keyword text.</value>
        [DataMember(Name = "keywordText", IsRequired = true, EmitDefaultValue = true)]
        public string KeywordText { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SponsoredProductsCreateDraftKeyword {\n");
            sb.Append("  NativeLanguageKeyword: ").Append(NativeLanguageKeyword).Append("\n");
            sb.Append("  NativeLanguageLocale: ").Append(NativeLanguageLocale).Append("\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  MatchType: ").Append(MatchType).Append("\n");
            sb.Append("  Bid: ").Append(Bid).Append("\n");
            sb.Append("  AdGroupId: ").Append(AdGroupId).Append("\n");
            sb.Append("  KeywordText: ").Append(KeywordText).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SponsoredProductsCreateDraftKeyword);
        }

        /// <summary>
        /// Returns true if SponsoredProductsCreateDraftKeyword instances are equal
        /// </summary>
        /// <param name="input">Instance of SponsoredProductsCreateDraftKeyword to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SponsoredProductsCreateDraftKeyword input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.NativeLanguageKeyword == input.NativeLanguageKeyword ||
                    (this.NativeLanguageKeyword != null &&
                    this.NativeLanguageKeyword.Equals(input.NativeLanguageKeyword))
                ) && 
                (
                    this.NativeLanguageLocale == input.NativeLanguageLocale ||
                    (this.NativeLanguageLocale != null &&
                    this.NativeLanguageLocale.Equals(input.NativeLanguageLocale))
                ) && 
                (
                    this.CampaignId == input.CampaignId ||
                    (this.CampaignId != null &&
                    this.CampaignId.Equals(input.CampaignId))
                ) && 
                (
                    this.MatchType == input.MatchType ||
                    this.MatchType.Equals(input.MatchType)
                ) && 
                (
                    this.Bid == input.Bid ||
                    this.Bid.Equals(input.Bid)
                ) && 
                (
                    this.AdGroupId == input.AdGroupId ||
                    (this.AdGroupId != null &&
                    this.AdGroupId.Equals(input.AdGroupId))
                ) && 
                (
                    this.KeywordText == input.KeywordText ||
                    (this.KeywordText != null &&
                    this.KeywordText.Equals(input.KeywordText))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NativeLanguageKeyword != null)
                {
                    hashCode = (hashCode * 59) + this.NativeLanguageKeyword.GetHashCode();
                }
                if (this.NativeLanguageLocale != null)
                {
                    hashCode = (hashCode * 59) + this.NativeLanguageLocale.GetHashCode();
                }
                if (this.CampaignId != null)
                {
                    hashCode = (hashCode * 59) + this.CampaignId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.MatchType.GetHashCode();
                hashCode = (hashCode * 59) + this.Bid.GetHashCode();
                if (this.AdGroupId != null)
                {
                    hashCode = (hashCode * 59) + this.AdGroupId.GetHashCode();
                }
                if (this.KeywordText != null)
                {
                    hashCode = (hashCode * 59) + this.KeywordText.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // Bid (double) minimum
            if (this.Bid < (double)0.02)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Bid, must be a value greater than or equal to 0.02.", new [] { "Bid" });
            }

            yield break;
        }
    }

}
