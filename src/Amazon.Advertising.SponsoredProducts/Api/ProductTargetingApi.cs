/*
 * Sponsored Products
 *
 *  
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Amazon.Advertising.SponsoredProducts.Client;
using Amazon.Advertising.SponsoredProducts.Model;

namespace Amazon.Advertising.SponsoredProducts.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductTargetingApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Returns a list of category recommendations for the input list of ASINs.
        /// </summary>
        /// <remarks>
        /// Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. &lt;br&gt; &lt;ul&gt;&lt;li&gt;Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.&lt;/li&gt;&lt;ul&gt;  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getCategoryRecommendationsForAsinsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CategoryRecommendations</returns>
        CategoryRecommendations GetCategoryRecommendationsForASINs(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetCategoryRecommendationsForAsinsRequest? getCategoryRecommendationsForAsinsRequest = default(GetCategoryRecommendationsForAsinsRequest?), int operationIndex = 0);

        /// <summary>
        /// Returns a list of category recommendations for the input list of ASINs.
        /// </summary>
        /// <remarks>
        /// Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. &lt;br&gt; &lt;ul&gt;&lt;li&gt;Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.&lt;/li&gt;&lt;ul&gt;  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getCategoryRecommendationsForAsinsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CategoryRecommendations</returns>
        ApiResponse<CategoryRecommendations> GetCategoryRecommendationsForASINsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetCategoryRecommendationsForAsinsRequest? getCategoryRecommendationsForAsinsRequest = default(GetCategoryRecommendationsForAsinsRequest?), int operationIndex = 0);
        /// <summary>
        /// Returns brands recommended for negative targeting.
        /// </summary>
        /// <remarks>
        /// Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors&#39; brands.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Brand&gt;</returns>
        List<Brand> GetNegativeBrands(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0);

        /// <summary>
        /// Returns brands recommended for negative targeting.
        /// </summary>
        /// <remarks>
        /// Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors&#39; brands.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Brand&gt;</returns>
        ApiResponse<List<Brand>> GetNegativeBrandsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0);
        /// <summary>
        /// Returns refinements according to category input.
        /// </summary>
        /// <remarks>
        /// Returns refinements according to category input.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="categoryId">The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Refinements</returns>
        Refinements GetRefinementsForCategory(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string categoryId, string? prefer = default(string?), int operationIndex = 0);

        /// <summary>
        /// Returns refinements according to category input.
        /// </summary>
        /// <remarks>
        /// Returns refinements according to category input.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="categoryId">The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Refinements</returns>
        ApiResponse<Refinements> GetRefinementsForCategoryWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string categoryId, string? prefer = default(string?), int operationIndex = 0);
        /// <summary>
        /// Get number of targetable asins based on refinements provided by the user.
        /// </summary>
        /// <remarks>
        /// Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getTargetableAsinCountsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TargetableAsinCounts</returns>
        TargetableAsinCounts GetTargetableASINCounts(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetTargetableAsinCountsRequest? getTargetableAsinCountsRequest = default(GetTargetableAsinCountsRequest?), int operationIndex = 0);

        /// <summary>
        /// Get number of targetable asins based on refinements provided by the user.
        /// </summary>
        /// <remarks>
        /// Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getTargetableAsinCountsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TargetableAsinCounts</returns>
        ApiResponse<TargetableAsinCounts> GetTargetableASINCountsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetTargetableAsinCountsRequest? getTargetableAsinCountsRequest = default(GetTargetableAsinCountsRequest?), int operationIndex = 0);
        /// <summary>
        /// Returns all targetable categories.
        /// </summary>
        /// <remarks>
        /// Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TargetableCategories</returns>
        TargetableCategories GetTargetableCategories(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0);

        /// <summary>
        /// Returns all targetable categories.
        /// </summary>
        /// <remarks>
        /// Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TargetableCategories</returns>
        ApiResponse<TargetableCategories> GetTargetableCategoriesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0);
        /// <summary>
        /// Returns brands related to keyword input for negative targeting.
        /// </summary>
        /// <remarks>
        /// Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="searchBrandsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Brand&gt;</returns>
        List<Brand> SearchBrands(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), SearchBrandsRequest? searchBrandsRequest = default(SearchBrandsRequest?), int operationIndex = 0);

        /// <summary>
        /// Returns brands related to keyword input for negative targeting.
        /// </summary>
        /// <remarks>
        /// Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="searchBrandsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Brand&gt;</returns>
        ApiResponse<List<Brand>> SearchBrandsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), SearchBrandsRequest? searchBrandsRequest = default(SearchBrandsRequest?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductTargetingApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Returns a list of category recommendations for the input list of ASINs.
        /// </summary>
        /// <remarks>
        /// Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. &lt;br&gt; &lt;ul&gt;&lt;li&gt;Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.&lt;/li&gt;&lt;ul&gt;  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getCategoryRecommendationsForAsinsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CategoryRecommendations</returns>
        System.Threading.Tasks.Task<CategoryRecommendations> GetCategoryRecommendationsForASINsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetCategoryRecommendationsForAsinsRequest? getCategoryRecommendationsForAsinsRequest = default(GetCategoryRecommendationsForAsinsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns a list of category recommendations for the input list of ASINs.
        /// </summary>
        /// <remarks>
        /// Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. &lt;br&gt; &lt;ul&gt;&lt;li&gt;Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.&lt;/li&gt;&lt;ul&gt;  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getCategoryRecommendationsForAsinsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CategoryRecommendations)</returns>
        System.Threading.Tasks.Task<ApiResponse<CategoryRecommendations>> GetCategoryRecommendationsForASINsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetCategoryRecommendationsForAsinsRequest? getCategoryRecommendationsForAsinsRequest = default(GetCategoryRecommendationsForAsinsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Returns brands recommended for negative targeting.
        /// </summary>
        /// <remarks>
        /// Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors&#39; brands.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Brand&gt;</returns>
        System.Threading.Tasks.Task<List<Brand>> GetNegativeBrandsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns brands recommended for negative targeting.
        /// </summary>
        /// <remarks>
        /// Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors&#39; brands.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Brand&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<Brand>>> GetNegativeBrandsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Returns refinements according to category input.
        /// </summary>
        /// <remarks>
        /// Returns refinements according to category input.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="categoryId">The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Refinements</returns>
        System.Threading.Tasks.Task<Refinements> GetRefinementsForCategoryAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string categoryId, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns refinements according to category input.
        /// </summary>
        /// <remarks>
        /// Returns refinements according to category input.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="categoryId">The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Refinements)</returns>
        System.Threading.Tasks.Task<ApiResponse<Refinements>> GetRefinementsForCategoryWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string categoryId, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get number of targetable asins based on refinements provided by the user.
        /// </summary>
        /// <remarks>
        /// Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getTargetableAsinCountsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TargetableAsinCounts</returns>
        System.Threading.Tasks.Task<TargetableAsinCounts> GetTargetableASINCountsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetTargetableAsinCountsRequest? getTargetableAsinCountsRequest = default(GetTargetableAsinCountsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get number of targetable asins based on refinements provided by the user.
        /// </summary>
        /// <remarks>
        /// Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getTargetableAsinCountsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TargetableAsinCounts)</returns>
        System.Threading.Tasks.Task<ApiResponse<TargetableAsinCounts>> GetTargetableASINCountsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetTargetableAsinCountsRequest? getTargetableAsinCountsRequest = default(GetTargetableAsinCountsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Returns all targetable categories.
        /// </summary>
        /// <remarks>
        /// Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TargetableCategories</returns>
        System.Threading.Tasks.Task<TargetableCategories> GetTargetableCategoriesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns all targetable categories.
        /// </summary>
        /// <remarks>
        /// Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TargetableCategories)</returns>
        System.Threading.Tasks.Task<ApiResponse<TargetableCategories>> GetTargetableCategoriesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Returns brands related to keyword input for negative targeting.
        /// </summary>
        /// <remarks>
        /// Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="searchBrandsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Brand&gt;</returns>
        System.Threading.Tasks.Task<List<Brand>> SearchBrandsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), SearchBrandsRequest? searchBrandsRequest = default(SearchBrandsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns brands related to keyword input for negative targeting.
        /// </summary>
        /// <remarks>
        /// Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="searchBrandsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Brand&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<Brand>>> SearchBrandsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), SearchBrandsRequest? searchBrandsRequest = default(SearchBrandsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductTargetingApi : IProductTargetingApiSync, IProductTargetingApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ProductTargetingApi : IProductTargetingApi
    {
        private Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductTargetingApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProductTargetingApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductTargetingApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProductTargetingApi(string basePath)
        {
            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                new Amazon.Advertising.SponsoredProducts.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductTargetingApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ProductTargetingApi(Amazon.Advertising.SponsoredProducts.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductTargetingApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ProductTargetingApi(Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient client, Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient asyncClient, Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Returns a list of category recommendations for the input list of ASINs. Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. &lt;br&gt; &lt;ul&gt;&lt;li&gt;Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.&lt;/li&gt;&lt;ul&gt;  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getCategoryRecommendationsForAsinsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CategoryRecommendations</returns>
        public CategoryRecommendations GetCategoryRecommendationsForASINs(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetCategoryRecommendationsForAsinsRequest? getCategoryRecommendationsForAsinsRequest = default(GetCategoryRecommendationsForAsinsRequest?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CategoryRecommendations> localVarResponse = GetCategoryRecommendationsForASINsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getCategoryRecommendationsForAsinsRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns a list of category recommendations for the input list of ASINs. Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. &lt;br&gt; &lt;ul&gt;&lt;li&gt;Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.&lt;/li&gt;&lt;ul&gt;  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getCategoryRecommendationsForAsinsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CategoryRecommendations</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CategoryRecommendations> GetCategoryRecommendationsForASINsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetCategoryRecommendationsForAsinsRequest? getCategoryRecommendationsForAsinsRequest = default(GetCategoryRecommendationsForAsinsRequest?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetCategoryRecommendationsForASINs");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetCategoryRecommendationsForASINs");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spproducttargeting.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/vnd.spproducttargetingresponse.v4+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = getCategoryRecommendationsForAsinsRequest;

            localVarRequestOptions.Operation = "ProductTargetingApi.GetCategoryRecommendationsForASINs";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<CategoryRecommendations>("/sp/targets/categories/recommendations", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCategoryRecommendationsForASINs", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns a list of category recommendations for the input list of ASINs. Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. &lt;br&gt; &lt;ul&gt;&lt;li&gt;Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.&lt;/li&gt;&lt;ul&gt;  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getCategoryRecommendationsForAsinsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CategoryRecommendations</returns>
        public async System.Threading.Tasks.Task<CategoryRecommendations> GetCategoryRecommendationsForASINsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetCategoryRecommendationsForAsinsRequest? getCategoryRecommendationsForAsinsRequest = default(GetCategoryRecommendationsForAsinsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CategoryRecommendations> localVarResponse = await GetCategoryRecommendationsForASINsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getCategoryRecommendationsForAsinsRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns a list of category recommendations for the input list of ASINs. Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. &lt;br&gt; &lt;ul&gt;&lt;li&gt;Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.&lt;/li&gt;&lt;ul&gt;  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getCategoryRecommendationsForAsinsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CategoryRecommendations)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CategoryRecommendations>> GetCategoryRecommendationsForASINsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetCategoryRecommendationsForAsinsRequest? getCategoryRecommendationsForAsinsRequest = default(GetCategoryRecommendationsForAsinsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetCategoryRecommendationsForASINs");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetCategoryRecommendationsForASINs");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spproducttargeting.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/vnd.spproducttargetingresponse.v4+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = getCategoryRecommendationsForAsinsRequest;

            localVarRequestOptions.Operation = "ProductTargetingApi.GetCategoryRecommendationsForASINs";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<CategoryRecommendations>("/sp/targets/categories/recommendations", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCategoryRecommendationsForASINs", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns brands recommended for negative targeting. Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors&#39; brands.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Brand&gt;</returns>
        public List<Brand> GetNegativeBrands(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<List<Brand>> localVarResponse = GetNegativeBrandsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns brands recommended for negative targeting. Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors&#39; brands.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Brand&gt;</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<List<Brand>> GetNegativeBrandsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetNegativeBrands");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetNegativeBrands");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }

            localVarRequestOptions.Operation = "ProductTargetingApi.GetNegativeBrands";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<Brand>>("/sp/negativeTargets/brands/recommendations", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetNegativeBrands", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns brands recommended for negative targeting. Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors&#39; brands.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Brand&gt;</returns>
        public async System.Threading.Tasks.Task<List<Brand>> GetNegativeBrandsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<List<Brand>> localVarResponse = await GetNegativeBrandsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns brands recommended for negative targeting. Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors&#39; brands.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Brand&gt;)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<List<Brand>>> GetNegativeBrandsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetNegativeBrands");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetNegativeBrands");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }

            localVarRequestOptions.Operation = "ProductTargetingApi.GetNegativeBrands";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<Brand>>("/sp/negativeTargets/brands/recommendations", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetNegativeBrands", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns refinements according to category input. Returns refinements according to category input.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="categoryId">The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Refinements</returns>
        public Refinements GetRefinementsForCategory(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string categoryId, string? prefer = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<Refinements> localVarResponse = GetRefinementsForCategoryWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, categoryId, prefer);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns refinements according to category input. Returns refinements according to category input.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="categoryId">The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Refinements</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<Refinements> GetRefinementsForCategoryWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string categoryId, string? prefer = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetRefinementsForCategory");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetRefinementsForCategory");
            }

            // verify the required parameter 'categoryId' is set
            if (categoryId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'categoryId' when calling ProductTargetingApi->GetRefinementsForCategory");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("categoryId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }

            localVarRequestOptions.Operation = "ProductTargetingApi.GetRefinementsForCategory";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<Refinements>("/sp/targets/category/{categoryId}/refinements", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRefinementsForCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns refinements according to category input. Returns refinements according to category input.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="categoryId">The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Refinements</returns>
        public async System.Threading.Tasks.Task<Refinements> GetRefinementsForCategoryAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string categoryId, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<Refinements> localVarResponse = await GetRefinementsForCategoryWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, categoryId, prefer, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns refinements according to category input. Returns refinements according to category input.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="categoryId">The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Refinements)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<Refinements>> GetRefinementsForCategoryWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string categoryId, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetRefinementsForCategory");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetRefinementsForCategory");
            }

            // verify the required parameter 'categoryId' is set
            if (categoryId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'categoryId' when calling ProductTargetingApi->GetRefinementsForCategory");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("categoryId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }

            localVarRequestOptions.Operation = "ProductTargetingApi.GetRefinementsForCategory";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Refinements>("/sp/targets/category/{categoryId}/refinements", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRefinementsForCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get number of targetable asins based on refinements provided by the user. Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getTargetableAsinCountsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TargetableAsinCounts</returns>
        public TargetableAsinCounts GetTargetableASINCounts(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetTargetableAsinCountsRequest? getTargetableAsinCountsRequest = default(GetTargetableAsinCountsRequest?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<TargetableAsinCounts> localVarResponse = GetTargetableASINCountsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getTargetableAsinCountsRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get number of targetable asins based on refinements provided by the user. Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getTargetableAsinCountsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TargetableAsinCounts</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<TargetableAsinCounts> GetTargetableASINCountsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetTargetableAsinCountsRequest? getTargetableAsinCountsRequest = default(GetTargetableAsinCountsRequest?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetTargetableASINCounts");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetTargetableASINCounts");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spproducttargeting.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = getTargetableAsinCountsRequest;

            localVarRequestOptions.Operation = "ProductTargetingApi.GetTargetableASINCounts";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<TargetableAsinCounts>("/sp/targets/products/count", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetTargetableASINCounts", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get number of targetable asins based on refinements provided by the user. Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getTargetableAsinCountsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TargetableAsinCounts</returns>
        public async System.Threading.Tasks.Task<TargetableAsinCounts> GetTargetableASINCountsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetTargetableAsinCountsRequest? getTargetableAsinCountsRequest = default(GetTargetableAsinCountsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<TargetableAsinCounts> localVarResponse = await GetTargetableASINCountsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getTargetableAsinCountsRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get number of targetable asins based on refinements provided by the user. Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="getTargetableAsinCountsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TargetableAsinCounts)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<TargetableAsinCounts>> GetTargetableASINCountsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), GetTargetableAsinCountsRequest? getTargetableAsinCountsRequest = default(GetTargetableAsinCountsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetTargetableASINCounts");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetTargetableASINCounts");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spproducttargeting.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = getTargetableAsinCountsRequest;

            localVarRequestOptions.Operation = "ProductTargetingApi.GetTargetableASINCounts";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<TargetableAsinCounts>("/sp/targets/products/count", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetTargetableASINCounts", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns all targetable categories. Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TargetableCategories</returns>
        public TargetableCategories GetTargetableCategories(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<TargetableCategories> localVarResponse = GetTargetableCategoriesWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns all targetable categories. Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TargetableCategories</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<TargetableCategories> GetTargetableCategoriesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetTargetableCategories");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetTargetableCategories");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/vnd.spproducttargetingresponse.v4+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }

            localVarRequestOptions.Operation = "ProductTargetingApi.GetTargetableCategories";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<TargetableCategories>("/sp/targets/categories", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetTargetableCategories", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns all targetable categories. Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TargetableCategories</returns>
        public async System.Threading.Tasks.Task<TargetableCategories> GetTargetableCategoriesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<TargetableCategories> localVarResponse = await GetTargetableCategoriesWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns all targetable categories. Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TargetableCategories)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<TargetableCategories>> GetTargetableCategoriesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->GetTargetableCategories");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->GetTargetableCategories");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/vnd.spproducttargetingresponse.v4+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }

            localVarRequestOptions.Operation = "ProductTargetingApi.GetTargetableCategories";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<TargetableCategories>("/sp/targets/categories", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetTargetableCategories", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns brands related to keyword input for negative targeting. Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="searchBrandsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Brand&gt;</returns>
        public List<Brand> SearchBrands(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), SearchBrandsRequest? searchBrandsRequest = default(SearchBrandsRequest?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<List<Brand>> localVarResponse = SearchBrandsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, searchBrandsRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns brands related to keyword input for negative targeting. Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="searchBrandsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Brand&gt;</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<List<Brand>> SearchBrandsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), SearchBrandsRequest? searchBrandsRequest = default(SearchBrandsRequest?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->SearchBrands");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->SearchBrands");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spproducttargeting.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = searchBrandsRequest;

            localVarRequestOptions.Operation = "ProductTargetingApi.SearchBrands";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<List<Brand>>("/sp/negativeTargets/brands/search", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SearchBrands", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns brands related to keyword input for negative targeting. Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="searchBrandsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Brand&gt;</returns>
        public async System.Threading.Tasks.Task<List<Brand>> SearchBrandsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), SearchBrandsRequest? searchBrandsRequest = default(SearchBrandsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<List<Brand>> localVarResponse = await SearchBrandsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, searchBrandsRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns brands related to keyword input for negative targeting. Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="prefer">Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future. (optional)</param>
        /// <param name="searchBrandsRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Brand&gt;)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<List<Brand>>> SearchBrandsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string? prefer = default(string?), SearchBrandsRequest? searchBrandsRequest = default(SearchBrandsRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductTargetingApi->SearchBrands");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductTargetingApi->SearchBrands");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spproducttargeting.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spproducttargetingresponse.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = searchBrandsRequest;

            localVarRequestOptions.Operation = "ProductTargetingApi.SearchBrands";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<List<Brand>>("/sp/negativeTargets/brands/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SearchBrands", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
