/*
 * Sponsored Products
 *
 *  
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Amazon.Advertising.SponsoredProducts.Client;
using Amazon.Advertising.SponsoredProducts.Model;

namespace Amazon.Advertising.SponsoredProducts.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBudgetRecommendationsAndMissedOpportunitiesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get recommended daily budget and estimated missed opportunities for campaigns.
        /// </summary>
        /// <remarks>
        /// Given a list of campaigns as input, this API provides the following metrics -  &lt;br&gt; &lt;b&gt;1. Recommended daily budget - &lt;/b&gt; Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign&#39;s chances of running out of budget. &lt;br&gt; &lt;b&gt;2. Percent time in budget &lt;/b&gt; - The share of time the campaign was in budget during the past 7 days. &lt;br&gt; &lt;b&gt;3. Estimated missed impressions, clicks and sales &lt;/b&gt; - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign&#39;s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="budgetRecommendationRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>BudgetRecommendationResponse</returns>
        BudgetRecommendationResponse GetBudgetRecommendations(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, BudgetRecommendationRequest budgetRecommendationRequest, int operationIndex = 0);

        /// <summary>
        /// Get recommended daily budget and estimated missed opportunities for campaigns.
        /// </summary>
        /// <remarks>
        /// Given a list of campaigns as input, this API provides the following metrics -  &lt;br&gt; &lt;b&gt;1. Recommended daily budget - &lt;/b&gt; Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign&#39;s chances of running out of budget. &lt;br&gt; &lt;b&gt;2. Percent time in budget &lt;/b&gt; - The share of time the campaign was in budget during the past 7 days. &lt;br&gt; &lt;b&gt;3. Estimated missed impressions, clicks and sales &lt;/b&gt; - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign&#39;s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="budgetRecommendationRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of BudgetRecommendationResponse</returns>
        ApiResponse<BudgetRecommendationResponse> GetBudgetRecommendationsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, BudgetRecommendationRequest budgetRecommendationRequest, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBudgetRecommendationsAndMissedOpportunitiesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get recommended daily budget and estimated missed opportunities for campaigns.
        /// </summary>
        /// <remarks>
        /// Given a list of campaigns as input, this API provides the following metrics -  &lt;br&gt; &lt;b&gt;1. Recommended daily budget - &lt;/b&gt; Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign&#39;s chances of running out of budget. &lt;br&gt; &lt;b&gt;2. Percent time in budget &lt;/b&gt; - The share of time the campaign was in budget during the past 7 days. &lt;br&gt; &lt;b&gt;3. Estimated missed impressions, clicks and sales &lt;/b&gt; - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign&#39;s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="budgetRecommendationRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BudgetRecommendationResponse</returns>
        System.Threading.Tasks.Task<BudgetRecommendationResponse> GetBudgetRecommendationsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, BudgetRecommendationRequest budgetRecommendationRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get recommended daily budget and estimated missed opportunities for campaigns.
        /// </summary>
        /// <remarks>
        /// Given a list of campaigns as input, this API provides the following metrics -  &lt;br&gt; &lt;b&gt;1. Recommended daily budget - &lt;/b&gt; Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign&#39;s chances of running out of budget. &lt;br&gt; &lt;b&gt;2. Percent time in budget &lt;/b&gt; - The share of time the campaign was in budget during the past 7 days. &lt;br&gt; &lt;b&gt;3. Estimated missed impressions, clicks and sales &lt;/b&gt; - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign&#39;s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="budgetRecommendationRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BudgetRecommendationResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<BudgetRecommendationResponse>> GetBudgetRecommendationsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, BudgetRecommendationRequest budgetRecommendationRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBudgetRecommendationsAndMissedOpportunitiesApi : IBudgetRecommendationsAndMissedOpportunitiesApiSync, IBudgetRecommendationsAndMissedOpportunitiesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class BudgetRecommendationsAndMissedOpportunitiesApi : IBudgetRecommendationsAndMissedOpportunitiesApi
    {
        private Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="BudgetRecommendationsAndMissedOpportunitiesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BudgetRecommendationsAndMissedOpportunitiesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BudgetRecommendationsAndMissedOpportunitiesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BudgetRecommendationsAndMissedOpportunitiesApi(string basePath)
        {
            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                new Amazon.Advertising.SponsoredProducts.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BudgetRecommendationsAndMissedOpportunitiesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public BudgetRecommendationsAndMissedOpportunitiesApi(Amazon.Advertising.SponsoredProducts.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BudgetRecommendationsAndMissedOpportunitiesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public BudgetRecommendationsAndMissedOpportunitiesApi(Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient client, Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient asyncClient, Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get recommended daily budget and estimated missed opportunities for campaigns. Given a list of campaigns as input, this API provides the following metrics -  &lt;br&gt; &lt;b&gt;1. Recommended daily budget - &lt;/b&gt; Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign&#39;s chances of running out of budget. &lt;br&gt; &lt;b&gt;2. Percent time in budget &lt;/b&gt; - The share of time the campaign was in budget during the past 7 days. &lt;br&gt; &lt;b&gt;3. Estimated missed impressions, clicks and sales &lt;/b&gt; - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign&#39;s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="budgetRecommendationRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>BudgetRecommendationResponse</returns>
        public BudgetRecommendationResponse GetBudgetRecommendations(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, BudgetRecommendationRequest budgetRecommendationRequest, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<BudgetRecommendationResponse> localVarResponse = GetBudgetRecommendationsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRecommendationRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get recommended daily budget and estimated missed opportunities for campaigns. Given a list of campaigns as input, this API provides the following metrics -  &lt;br&gt; &lt;b&gt;1. Recommended daily budget - &lt;/b&gt; Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign&#39;s chances of running out of budget. &lt;br&gt; &lt;b&gt;2. Percent time in budget &lt;/b&gt; - The share of time the campaign was in budget during the past 7 days. &lt;br&gt; &lt;b&gt;3. Estimated missed impressions, clicks and sales &lt;/b&gt; - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign&#39;s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="budgetRecommendationRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of BudgetRecommendationResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<BudgetRecommendationResponse> GetBudgetRecommendationsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, BudgetRecommendationRequest budgetRecommendationRequest, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRecommendationsAndMissedOpportunitiesApi->GetBudgetRecommendations");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRecommendationsAndMissedOpportunitiesApi->GetBudgetRecommendations");
            }

            // verify the required parameter 'budgetRecommendationRequest' is set
            if (budgetRecommendationRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'budgetRecommendationRequest' when calling BudgetRecommendationsAndMissedOpportunitiesApi->GetBudgetRecommendations");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.budgetrecommendation.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.budgetrecommendation.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = budgetRecommendationRequest;

            localVarRequestOptions.Operation = "BudgetRecommendationsAndMissedOpportunitiesApi.GetBudgetRecommendations";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<BudgetRecommendationResponse>("/sp/campaigns/budgetRecommendations", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBudgetRecommendations", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get recommended daily budget and estimated missed opportunities for campaigns. Given a list of campaigns as input, this API provides the following metrics -  &lt;br&gt; &lt;b&gt;1. Recommended daily budget - &lt;/b&gt; Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign&#39;s chances of running out of budget. &lt;br&gt; &lt;b&gt;2. Percent time in budget &lt;/b&gt; - The share of time the campaign was in budget during the past 7 days. &lt;br&gt; &lt;b&gt;3. Estimated missed impressions, clicks and sales &lt;/b&gt; - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign&#39;s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="budgetRecommendationRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BudgetRecommendationResponse</returns>
        public async System.Threading.Tasks.Task<BudgetRecommendationResponse> GetBudgetRecommendationsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, BudgetRecommendationRequest budgetRecommendationRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<BudgetRecommendationResponse> localVarResponse = await GetBudgetRecommendationsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRecommendationRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get recommended daily budget and estimated missed opportunities for campaigns. Given a list of campaigns as input, this API provides the following metrics -  &lt;br&gt; &lt;b&gt;1. Recommended daily budget - &lt;/b&gt; Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign&#39;s chances of running out of budget. &lt;br&gt; &lt;b&gt;2. Percent time in budget &lt;/b&gt; - The share of time the campaign was in budget during the past 7 days. &lt;br&gt; &lt;b&gt;3. Estimated missed impressions, clicks and sales &lt;/b&gt; - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign&#39;s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="budgetRecommendationRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BudgetRecommendationResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<BudgetRecommendationResponse>> GetBudgetRecommendationsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, BudgetRecommendationRequest budgetRecommendationRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRecommendationsAndMissedOpportunitiesApi->GetBudgetRecommendations");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRecommendationsAndMissedOpportunitiesApi->GetBudgetRecommendations");
            }

            // verify the required parameter 'budgetRecommendationRequest' is set
            if (budgetRecommendationRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'budgetRecommendationRequest' when calling BudgetRecommendationsAndMissedOpportunitiesApi->GetBudgetRecommendations");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.budgetrecommendation.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.budgetrecommendation.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = budgetRecommendationRequest;

            localVarRequestOptions.Operation = "BudgetRecommendationsAndMissedOpportunitiesApi.GetBudgetRecommendations";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<BudgetRecommendationResponse>("/sp/campaigns/budgetRecommendations", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBudgetRecommendations", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
