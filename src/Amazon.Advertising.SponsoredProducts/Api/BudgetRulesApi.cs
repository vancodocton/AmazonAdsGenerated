/*
 * Sponsored Products
 *
 *  
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;

using Amazon.Advertising.SponsoredProducts.Client;
using Amazon.Advertising.SponsoredProducts.Model;

namespace Amazon.Advertising.SponsoredProducts.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBudgetRulesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Associates one or more budget rules to a campaign specified by identifer.
        /// </summary>
        /// <remarks>
        /// A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="createAssociatedBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateAssociatedBudgetRulesResponse</returns>
        CreateAssociatedBudgetRulesResponse CreateAssociatedBudgetRulesForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, CreateAssociatedBudgetRulesRequest createAssociatedBudgetRulesRequest, int operationIndex = 0);

        /// <summary>
        /// Associates one or more budget rules to a campaign specified by identifer.
        /// </summary>
        /// <remarks>
        /// A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="createAssociatedBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateAssociatedBudgetRulesResponse</returns>
        ApiResponse<CreateAssociatedBudgetRulesResponse> CreateAssociatedBudgetRulesForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, CreateAssociatedBudgetRulesRequest createAssociatedBudgetRulesRequest, int operationIndex = 0);
        /// <summary>
        /// Creates one or more budget rules.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateBudgetRulesResponse</returns>
        CreateBudgetRulesResponse CreateBudgetRulesForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPBudgetRulesRequest createSPBudgetRulesRequest, int operationIndex = 0);

        /// <summary>
        /// Creates one or more budget rules.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateBudgetRulesResponse</returns>
        ApiResponse<CreateBudgetRulesResponse> CreateBudgetRulesForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPBudgetRulesRequest createSPBudgetRulesRequest, int operationIndex = 0);
        /// <summary>
        /// Disassociates a budget rule specified by identifier from a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object DisassociateAssociatedBudgetRuleForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, string budgetRuleId, int operationIndex = 0);

        /// <summary>
        /// Disassociates a budget rule specified by identifier from a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> DisassociateAssociatedBudgetRuleForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, string budgetRuleId, int operationIndex = 0);
        /// <summary>
        /// Gets a budget rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetSPBudgetRuleResponse</returns>
        GetSPBudgetRuleResponse GetBudgetRuleByRuleIdForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, int operationIndex = 0);

        /// <summary>
        /// Gets a budget rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetSPBudgetRuleResponse</returns>
        ApiResponse<GetSPBudgetRuleResponse> GetBudgetRuleByRuleIdForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, int operationIndex = 0);
        /// <summary>
        /// Gets all the campaigns associated with a budget rule
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPGetAssociatedCampaignsResponse</returns>
        SPGetAssociatedCampaignsResponse GetCampaignsAssociatedWithSPBudgetRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0);

        /// <summary>
        /// Gets all the campaigns associated with a budget rule
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPGetAssociatedCampaignsResponse</returns>
        ApiResponse<SPGetAssociatedCampaignsResponse> GetCampaignsAssociatedWithSPBudgetRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0);
        /// <summary>
        /// Gets the budget history for a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        /// The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="startDate">The start date of the budget history in YYYYMMDD format.</param>
        /// <param name="endDate">The end date of the budget history in YYYYMMDD format.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPBudgetHistory</returns>
        SPBudgetHistory GetRuleBasedBudgetHistoryForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, decimal pageSize, string startDate, string endDate, string? nextToken = default(string?), int operationIndex = 0);

        /// <summary>
        /// Gets the budget history for a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        /// The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="startDate">The start date of the budget history in YYYYMMDD format.</param>
        /// <param name="endDate">The end date of the budget history in YYYYMMDD format.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPBudgetHistory</returns>
        ApiResponse<SPBudgetHistory> GetRuleBasedBudgetHistoryForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, decimal pageSize, string startDate, string endDate, string? nextToken = default(string?), int operationIndex = 0);
        /// <summary>
        /// Get all budget rules created by an advertiser
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetSPBudgetRulesForAdvertiserResponse</returns>
        GetSPBudgetRulesForAdvertiserResponse GetSPBudgetRulesForAdvertiser(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0);

        /// <summary>
        /// Get all budget rules created by an advertiser
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetSPBudgetRulesForAdvertiserResponse</returns>
        ApiResponse<GetSPBudgetRulesForAdvertiserResponse> GetSPBudgetRulesForAdvertiserWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0);
        /// <summary>
        /// Gets a list of budget rules associated to a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPListAssociatedBudgetRulesResponse</returns>
        SPListAssociatedBudgetRulesResponse ListAssociatedBudgetRulesForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, int operationIndex = 0);

        /// <summary>
        /// Gets a list of budget rules associated to a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPListAssociatedBudgetRulesResponse</returns>
        ApiResponse<SPListAssociatedBudgetRulesResponse> ListAssociatedBudgetRulesForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, int operationIndex = 0);
        /// <summary>
        /// Updates one or more budget rules.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>UpdateBudgetRulesResponse</returns>
        UpdateBudgetRulesResponse UpdateBudgetRulesForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPBudgetRulesRequest updateSPBudgetRulesRequest, int operationIndex = 0);

        /// <summary>
        /// Updates one or more budget rules.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of UpdateBudgetRulesResponse</returns>
        ApiResponse<UpdateBudgetRulesResponse> UpdateBudgetRulesForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPBudgetRulesRequest updateSPBudgetRulesRequest, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBudgetRulesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Associates one or more budget rules to a campaign specified by identifer.
        /// </summary>
        /// <remarks>
        /// A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="createAssociatedBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateAssociatedBudgetRulesResponse</returns>
        System.Threading.Tasks.Task<CreateAssociatedBudgetRulesResponse> CreateAssociatedBudgetRulesForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, CreateAssociatedBudgetRulesRequest createAssociatedBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Associates one or more budget rules to a campaign specified by identifer.
        /// </summary>
        /// <remarks>
        /// A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="createAssociatedBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateAssociatedBudgetRulesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CreateAssociatedBudgetRulesResponse>> CreateAssociatedBudgetRulesForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, CreateAssociatedBudgetRulesRequest createAssociatedBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Creates one or more budget rules.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateBudgetRulesResponse</returns>
        System.Threading.Tasks.Task<CreateBudgetRulesResponse> CreateBudgetRulesForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPBudgetRulesRequest createSPBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Creates one or more budget rules.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateBudgetRulesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CreateBudgetRulesResponse>> CreateBudgetRulesForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPBudgetRulesRequest createSPBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Disassociates a budget rule specified by identifier from a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> DisassociateAssociatedBudgetRuleForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, string budgetRuleId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Disassociates a budget rule specified by identifier from a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DisassociateAssociatedBudgetRuleForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, string budgetRuleId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets a budget rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetSPBudgetRuleResponse</returns>
        System.Threading.Tasks.Task<GetSPBudgetRuleResponse> GetBudgetRuleByRuleIdForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a budget rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetSPBudgetRuleResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetSPBudgetRuleResponse>> GetBudgetRuleByRuleIdForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets all the campaigns associated with a budget rule
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPGetAssociatedCampaignsResponse</returns>
        System.Threading.Tasks.Task<SPGetAssociatedCampaignsResponse> GetCampaignsAssociatedWithSPBudgetRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets all the campaigns associated with a budget rule
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPGetAssociatedCampaignsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<SPGetAssociatedCampaignsResponse>> GetCampaignsAssociatedWithSPBudgetRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets the budget history for a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        /// The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="startDate">The start date of the budget history in YYYYMMDD format.</param>
        /// <param name="endDate">The end date of the budget history in YYYYMMDD format.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPBudgetHistory</returns>
        System.Threading.Tasks.Task<SPBudgetHistory> GetRuleBasedBudgetHistoryForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, decimal pageSize, string startDate, string endDate, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets the budget history for a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        /// The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="startDate">The start date of the budget history in YYYYMMDD format.</param>
        /// <param name="endDate">The end date of the budget history in YYYYMMDD format.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPBudgetHistory)</returns>
        System.Threading.Tasks.Task<ApiResponse<SPBudgetHistory>> GetRuleBasedBudgetHistoryForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, decimal pageSize, string startDate, string endDate, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get all budget rules created by an advertiser
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetSPBudgetRulesForAdvertiserResponse</returns>
        System.Threading.Tasks.Task<GetSPBudgetRulesForAdvertiserResponse> GetSPBudgetRulesForAdvertiserAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get all budget rules created by an advertiser
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetSPBudgetRulesForAdvertiserResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetSPBudgetRulesForAdvertiserResponse>> GetSPBudgetRulesForAdvertiserWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets a list of budget rules associated to a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPListAssociatedBudgetRulesResponse</returns>
        System.Threading.Tasks.Task<SPListAssociatedBudgetRulesResponse> ListAssociatedBudgetRulesForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a list of budget rules associated to a campaign specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPListAssociatedBudgetRulesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<SPListAssociatedBudgetRulesResponse>> ListAssociatedBudgetRulesForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Updates one or more budget rules.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of UpdateBudgetRulesResponse</returns>
        System.Threading.Tasks.Task<UpdateBudgetRulesResponse> UpdateBudgetRulesForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPBudgetRulesRequest updateSPBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Updates one or more budget rules.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (UpdateBudgetRulesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<UpdateBudgetRulesResponse>> UpdateBudgetRulesForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPBudgetRulesRequest updateSPBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBudgetRulesApi : IBudgetRulesApiSync, IBudgetRulesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class BudgetRulesApi : IBudgetRulesApi
    {
        private Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="BudgetRulesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BudgetRulesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BudgetRulesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BudgetRulesApi(string basePath)
        {
            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                new Amazon.Advertising.SponsoredProducts.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BudgetRulesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public BudgetRulesApi(Amazon.Advertising.SponsoredProducts.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BudgetRulesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public BudgetRulesApi(Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient client, Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient asyncClient, Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Associates one or more budget rules to a campaign specified by identifer. A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="createAssociatedBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateAssociatedBudgetRulesResponse</returns>
        public CreateAssociatedBudgetRulesResponse CreateAssociatedBudgetRulesForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, CreateAssociatedBudgetRulesRequest createAssociatedBudgetRulesRequest, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateAssociatedBudgetRulesResponse> localVarResponse = CreateAssociatedBudgetRulesForSPCampaignsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Associates one or more budget rules to a campaign specified by identifer. A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="createAssociatedBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateAssociatedBudgetRulesResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateAssociatedBudgetRulesResponse> CreateAssociatedBudgetRulesForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, CreateAssociatedBudgetRulesRequest createAssociatedBudgetRulesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->CreateAssociatedBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->CreateAssociatedBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'createAssociatedBudgetRulesRequest' is set
            if (createAssociatedBudgetRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'createAssociatedBudgetRulesRequest' when calling BudgetRulesApi->CreateAssociatedBudgetRulesForSPCampaigns");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = createAssociatedBudgetRulesRequest;

            localVarRequestOptions.Operation = "BudgetRulesApi.CreateAssociatedBudgetRulesForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<CreateAssociatedBudgetRulesResponse>("/sp/campaigns/{campaignId}/budgetRules", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateAssociatedBudgetRulesForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Associates one or more budget rules to a campaign specified by identifer. A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="createAssociatedBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateAssociatedBudgetRulesResponse</returns>
        public async System.Threading.Tasks.Task<CreateAssociatedBudgetRulesResponse> CreateAssociatedBudgetRulesForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, CreateAssociatedBudgetRulesRequest createAssociatedBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateAssociatedBudgetRulesResponse> localVarResponse = await CreateAssociatedBudgetRulesForSPCampaignsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Associates one or more budget rules to a campaign specified by identifer. A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="createAssociatedBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateAssociatedBudgetRulesResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateAssociatedBudgetRulesResponse>> CreateAssociatedBudgetRulesForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, CreateAssociatedBudgetRulesRequest createAssociatedBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->CreateAssociatedBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->CreateAssociatedBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'createAssociatedBudgetRulesRequest' is set
            if (createAssociatedBudgetRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'createAssociatedBudgetRulesRequest' when calling BudgetRulesApi->CreateAssociatedBudgetRulesForSPCampaigns");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = createAssociatedBudgetRulesRequest;

            localVarRequestOptions.Operation = "BudgetRulesApi.CreateAssociatedBudgetRulesForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<CreateAssociatedBudgetRulesResponse>("/sp/campaigns/{campaignId}/budgetRules", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateAssociatedBudgetRulesForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates one or more budget rules.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateBudgetRulesResponse</returns>
        public CreateBudgetRulesResponse CreateBudgetRulesForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPBudgetRulesRequest createSPBudgetRulesRequest, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateBudgetRulesResponse> localVarResponse = CreateBudgetRulesForSPCampaignsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPBudgetRulesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates one or more budget rules.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateBudgetRulesResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateBudgetRulesResponse> CreateBudgetRulesForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPBudgetRulesRequest createSPBudgetRulesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->CreateBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->CreateBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'createSPBudgetRulesRequest' is set
            if (createSPBudgetRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'createSPBudgetRulesRequest' when calling BudgetRulesApi->CreateBudgetRulesForSPCampaigns");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = createSPBudgetRulesRequest;

            localVarRequestOptions.Operation = "BudgetRulesApi.CreateBudgetRulesForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<CreateBudgetRulesResponse>("/sp/budgetRules", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateBudgetRulesForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates one or more budget rules.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateBudgetRulesResponse</returns>
        public async System.Threading.Tasks.Task<CreateBudgetRulesResponse> CreateBudgetRulesForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPBudgetRulesRequest createSPBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateBudgetRulesResponse> localVarResponse = await CreateBudgetRulesForSPCampaignsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPBudgetRulesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates one or more budget rules.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateBudgetRulesResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateBudgetRulesResponse>> CreateBudgetRulesForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPBudgetRulesRequest createSPBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->CreateBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->CreateBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'createSPBudgetRulesRequest' is set
            if (createSPBudgetRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'createSPBudgetRulesRequest' when calling BudgetRulesApi->CreateBudgetRulesForSPCampaigns");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = createSPBudgetRulesRequest;

            localVarRequestOptions.Operation = "BudgetRulesApi.CreateBudgetRulesForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<CreateBudgetRulesResponse>("/sp/budgetRules", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateBudgetRulesForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Disassociates a budget rule specified by identifier from a campaign specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object DisassociateAssociatedBudgetRuleForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, string budgetRuleId, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<Object> localVarResponse = DisassociateAssociatedBudgetRuleForSPCampaignsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Disassociates a budget rule specified by identifier from a campaign specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<Object> DisassociateAssociatedBudgetRuleForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, string budgetRuleId, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->DisassociateAssociatedBudgetRuleForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->DisassociateAssociatedBudgetRuleForSPCampaigns");
            }

            // verify the required parameter 'budgetRuleId' is set
            if (budgetRuleId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'budgetRuleId' when calling BudgetRulesApi->DisassociateAssociatedBudgetRuleForSPCampaigns");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignId)); // path parameter
            localVarRequestOptions.PathParameters.Add("budgetRuleId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(budgetRuleId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.DisassociateAssociatedBudgetRuleForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/sp/campaigns/{campaignId}/budgetRules/{budgetRuleId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DisassociateAssociatedBudgetRuleForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Disassociates a budget rule specified by identifier from a campaign specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> DisassociateAssociatedBudgetRuleForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, string budgetRuleId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<Object> localVarResponse = await DisassociateAssociatedBudgetRuleForSPCampaignsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Disassociates a budget rule specified by identifier from a campaign specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<Object>> DisassociateAssociatedBudgetRuleForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, string budgetRuleId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->DisassociateAssociatedBudgetRuleForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->DisassociateAssociatedBudgetRuleForSPCampaigns");
            }

            // verify the required parameter 'budgetRuleId' is set
            if (budgetRuleId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'budgetRuleId' when calling BudgetRulesApi->DisassociateAssociatedBudgetRuleForSPCampaigns");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignId)); // path parameter
            localVarRequestOptions.PathParameters.Add("budgetRuleId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(budgetRuleId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.DisassociateAssociatedBudgetRuleForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/sp/campaigns/{campaignId}/budgetRules/{budgetRuleId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DisassociateAssociatedBudgetRuleForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets a budget rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetSPBudgetRuleResponse</returns>
        public GetSPBudgetRuleResponse GetBudgetRuleByRuleIdForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPBudgetRuleResponse> localVarResponse = GetBudgetRuleByRuleIdForSPCampaignsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets a budget rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetSPBudgetRuleResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPBudgetRuleResponse> GetBudgetRuleByRuleIdForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->GetBudgetRuleByRuleIdForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->GetBudgetRuleByRuleIdForSPCampaigns");
            }

            // verify the required parameter 'budgetRuleId' is set
            if (budgetRuleId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'budgetRuleId' when calling BudgetRulesApi->GetBudgetRuleByRuleIdForSPCampaigns");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("budgetRuleId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(budgetRuleId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.GetBudgetRuleByRuleIdForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<GetSPBudgetRuleResponse>("/sp/budgetRules/{budgetRuleId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBudgetRuleByRuleIdForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets a budget rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetSPBudgetRuleResponse</returns>
        public async System.Threading.Tasks.Task<GetSPBudgetRuleResponse> GetBudgetRuleByRuleIdForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPBudgetRuleResponse> localVarResponse = await GetBudgetRuleByRuleIdForSPCampaignsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets a budget rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetSPBudgetRuleResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPBudgetRuleResponse>> GetBudgetRuleByRuleIdForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->GetBudgetRuleByRuleIdForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->GetBudgetRuleByRuleIdForSPCampaigns");
            }

            // verify the required parameter 'budgetRuleId' is set
            if (budgetRuleId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'budgetRuleId' when calling BudgetRulesApi->GetBudgetRuleByRuleIdForSPCampaigns");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("budgetRuleId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(budgetRuleId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.GetBudgetRuleByRuleIdForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<GetSPBudgetRuleResponse>("/sp/budgetRules/{budgetRuleId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetBudgetRuleByRuleIdForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets all the campaigns associated with a budget rule 
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPGetAssociatedCampaignsResponse</returns>
        public SPGetAssociatedCampaignsResponse GetCampaignsAssociatedWithSPBudgetRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPGetAssociatedCampaignsResponse> localVarResponse = GetCampaignsAssociatedWithSPBudgetRuleWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets all the campaigns associated with a budget rule 
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPGetAssociatedCampaignsResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPGetAssociatedCampaignsResponse> GetCampaignsAssociatedWithSPBudgetRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->GetCampaignsAssociatedWithSPBudgetRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->GetCampaignsAssociatedWithSPBudgetRule");
            }

            // verify the required parameter 'budgetRuleId' is set
            if (budgetRuleId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'budgetRuleId' when calling BudgetRulesApi->GetCampaignsAssociatedWithSPBudgetRule");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("budgetRuleId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(budgetRuleId)); // path parameter
            if (nextToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "nextToken", nextToken));
            }
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "pageSize", pageSize));
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.GetCampaignsAssociatedWithSPBudgetRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<SPGetAssociatedCampaignsResponse>("/sp/budgetRules/{budgetRuleId}/campaigns", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCampaignsAssociatedWithSPBudgetRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets all the campaigns associated with a budget rule 
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPGetAssociatedCampaignsResponse</returns>
        public async System.Threading.Tasks.Task<SPGetAssociatedCampaignsResponse> GetCampaignsAssociatedWithSPBudgetRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPGetAssociatedCampaignsResponse> localVarResponse = await GetCampaignsAssociatedWithSPBudgetRuleWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets all the campaigns associated with a budget rule 
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="budgetRuleId">The budget rule identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPGetAssociatedCampaignsResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPGetAssociatedCampaignsResponse>> GetCampaignsAssociatedWithSPBudgetRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string budgetRuleId, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->GetCampaignsAssociatedWithSPBudgetRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->GetCampaignsAssociatedWithSPBudgetRule");
            }

            // verify the required parameter 'budgetRuleId' is set
            if (budgetRuleId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'budgetRuleId' when calling BudgetRulesApi->GetCampaignsAssociatedWithSPBudgetRule");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("budgetRuleId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(budgetRuleId)); // path parameter
            if (nextToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "nextToken", nextToken));
            }
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "pageSize", pageSize));
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.GetCampaignsAssociatedWithSPBudgetRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<SPGetAssociatedCampaignsResponse>("/sp/budgetRules/{budgetRuleId}/campaigns", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCampaignsAssociatedWithSPBudgetRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets the budget history for a campaign specified by identifier. The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="startDate">The start date of the budget history in YYYYMMDD format.</param>
        /// <param name="endDate">The end date of the budget history in YYYYMMDD format.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPBudgetHistory</returns>
        public SPBudgetHistory GetRuleBasedBudgetHistoryForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, decimal pageSize, string startDate, string endDate, string? nextToken = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPBudgetHistory> localVarResponse = GetRuleBasedBudgetHistoryForSPCampaignsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets the budget history for a campaign specified by identifier. The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="startDate">The start date of the budget history in YYYYMMDD format.</param>
        /// <param name="endDate">The end date of the budget history in YYYYMMDD format.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPBudgetHistory</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPBudgetHistory> GetRuleBasedBudgetHistoryForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, decimal pageSize, string startDate, string endDate, string? nextToken = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->GetRuleBasedBudgetHistoryForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->GetRuleBasedBudgetHistoryForSPCampaigns");
            }

            // verify the required parameter 'startDate' is set
            if (startDate == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'startDate' when calling BudgetRulesApi->GetRuleBasedBudgetHistoryForSPCampaigns");
            }

            // verify the required parameter 'endDate' is set
            if (endDate == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'endDate' when calling BudgetRulesApi->GetRuleBasedBudgetHistoryForSPCampaigns");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignId)); // path parameter
            if (nextToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "nextToken", nextToken));
            }
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "pageSize", pageSize));
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "startDate", startDate));
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "endDate", endDate));
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.GetRuleBasedBudgetHistoryForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<SPBudgetHistory>("/sp/campaigns/{campaignId}/budgetRules/budgetHistory", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRuleBasedBudgetHistoryForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets the budget history for a campaign specified by identifier. The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="startDate">The start date of the budget history in YYYYMMDD format.</param>
        /// <param name="endDate">The end date of the budget history in YYYYMMDD format.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPBudgetHistory</returns>
        public async System.Threading.Tasks.Task<SPBudgetHistory> GetRuleBasedBudgetHistoryForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, decimal pageSize, string startDate, string endDate, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPBudgetHistory> localVarResponse = await GetRuleBasedBudgetHistoryForSPCampaignsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets the budget history for a campaign specified by identifier. The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="startDate">The start date of the budget history in YYYYMMDD format.</param>
        /// <param name="endDate">The end date of the budget history in YYYYMMDD format.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPBudgetHistory)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPBudgetHistory>> GetRuleBasedBudgetHistoryForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, decimal pageSize, string startDate, string endDate, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->GetRuleBasedBudgetHistoryForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->GetRuleBasedBudgetHistoryForSPCampaigns");
            }

            // verify the required parameter 'startDate' is set
            if (startDate == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'startDate' when calling BudgetRulesApi->GetRuleBasedBudgetHistoryForSPCampaigns");
            }

            // verify the required parameter 'endDate' is set
            if (endDate == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'endDate' when calling BudgetRulesApi->GetRuleBasedBudgetHistoryForSPCampaigns");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignId)); // path parameter
            if (nextToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "nextToken", nextToken));
            }
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "pageSize", pageSize));
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "startDate", startDate));
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "endDate", endDate));
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.GetRuleBasedBudgetHistoryForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<SPBudgetHistory>("/sp/campaigns/{campaignId}/budgetRules/budgetHistory", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRuleBasedBudgetHistoryForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get all budget rules created by an advertiser 
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetSPBudgetRulesForAdvertiserResponse</returns>
        public GetSPBudgetRulesForAdvertiserResponse GetSPBudgetRulesForAdvertiser(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPBudgetRulesForAdvertiserResponse> localVarResponse = GetSPBudgetRulesForAdvertiserWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get all budget rules created by an advertiser 
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetSPBudgetRulesForAdvertiserResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPBudgetRulesForAdvertiserResponse> GetSPBudgetRulesForAdvertiserWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->GetSPBudgetRulesForAdvertiser");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->GetSPBudgetRulesForAdvertiser");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (nextToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "nextToken", nextToken));
            }
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "pageSize", pageSize));
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.GetSPBudgetRulesForAdvertiser";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<GetSPBudgetRulesForAdvertiserResponse>("/sp/budgetRules", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetSPBudgetRulesForAdvertiser", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get all budget rules created by an advertiser 
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetSPBudgetRulesForAdvertiserResponse</returns>
        public async System.Threading.Tasks.Task<GetSPBudgetRulesForAdvertiserResponse> GetSPBudgetRulesForAdvertiserAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPBudgetRulesForAdvertiserResponse> localVarResponse = await GetSPBudgetRulesForAdvertiserWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get all budget rules created by an advertiser 
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="pageSize">Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.</param>
        /// <param name="nextToken">To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetSPBudgetRulesForAdvertiserResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPBudgetRulesForAdvertiserResponse>> GetSPBudgetRulesForAdvertiserWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal pageSize, string? nextToken = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->GetSPBudgetRulesForAdvertiser");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->GetSPBudgetRulesForAdvertiser");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (nextToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "nextToken", nextToken));
            }
            localVarRequestOptions.QueryParameters.Add(Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToMultiMap("", "pageSize", pageSize));
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.GetSPBudgetRulesForAdvertiser";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<GetSPBudgetRulesForAdvertiserResponse>("/sp/budgetRules", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetSPBudgetRulesForAdvertiser", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets a list of budget rules associated to a campaign specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPListAssociatedBudgetRulesResponse</returns>
        public SPListAssociatedBudgetRulesResponse ListAssociatedBudgetRulesForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPListAssociatedBudgetRulesResponse> localVarResponse = ListAssociatedBudgetRulesForSPCampaignsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets a list of budget rules associated to a campaign specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPListAssociatedBudgetRulesResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPListAssociatedBudgetRulesResponse> ListAssociatedBudgetRulesForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->ListAssociatedBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->ListAssociatedBudgetRulesForSPCampaigns");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.ListAssociatedBudgetRulesForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<SPListAssociatedBudgetRulesResponse>("/sp/campaigns/{campaignId}/budgetRules", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListAssociatedBudgetRulesForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets a list of budget rules associated to a campaign specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPListAssociatedBudgetRulesResponse</returns>
        public async System.Threading.Tasks.Task<SPListAssociatedBudgetRulesResponse> ListAssociatedBudgetRulesForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPListAssociatedBudgetRulesResponse> localVarResponse = await ListAssociatedBudgetRulesForSPCampaignsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets a list of budget rules associated to a campaign specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignId">The campaign identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPListAssociatedBudgetRulesResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPListAssociatedBudgetRulesResponse>> ListAssociatedBudgetRulesForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, decimal campaignId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->ListAssociatedBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->ListAssociatedBudgetRulesForSPCampaigns");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "BudgetRulesApi.ListAssociatedBudgetRulesForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<SPListAssociatedBudgetRulesResponse>("/sp/campaigns/{campaignId}/budgetRules", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListAssociatedBudgetRulesForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates one or more budget rules.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>UpdateBudgetRulesResponse</returns>
        public UpdateBudgetRulesResponse UpdateBudgetRulesForSPCampaigns(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPBudgetRulesRequest updateSPBudgetRulesRequest, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<UpdateBudgetRulesResponse> localVarResponse = UpdateBudgetRulesForSPCampaignsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPBudgetRulesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Updates one or more budget rules.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of UpdateBudgetRulesResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<UpdateBudgetRulesResponse> UpdateBudgetRulesForSPCampaignsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPBudgetRulesRequest updateSPBudgetRulesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->UpdateBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->UpdateBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'updateSPBudgetRulesRequest' is set
            if (updateSPBudgetRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'updateSPBudgetRulesRequest' when calling BudgetRulesApi->UpdateBudgetRulesForSPCampaigns");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = updateSPBudgetRulesRequest;

            localVarRequestOptions.Operation = "BudgetRulesApi.UpdateBudgetRulesForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<UpdateBudgetRulesResponse>("/sp/budgetRules", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateBudgetRulesForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates one or more budget rules.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of UpdateBudgetRulesResponse</returns>
        public async System.Threading.Tasks.Task<UpdateBudgetRulesResponse> UpdateBudgetRulesForSPCampaignsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPBudgetRulesRequest updateSPBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<UpdateBudgetRulesResponse> localVarResponse = await UpdateBudgetRulesForSPCampaignsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPBudgetRulesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Updates one or more budget rules.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPBudgetRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (UpdateBudgetRulesResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<UpdateBudgetRulesResponse>> UpdateBudgetRulesForSPCampaignsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPBudgetRulesRequest updateSPBudgetRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling BudgetRulesApi->UpdateBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling BudgetRulesApi->UpdateBudgetRulesForSPCampaigns");
            }

            // verify the required parameter 'updateSPBudgetRulesRequest' is set
            if (updateSPBudgetRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'updateSPBudgetRulesRequest' when calling BudgetRulesApi->UpdateBudgetRulesForSPCampaigns");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = updateSPBudgetRulesRequest;

            localVarRequestOptions.Operation = "BudgetRulesApi.UpdateBudgetRulesForSPCampaigns";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<UpdateBudgetRulesResponse>("/sp/budgetRules", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateBudgetRulesForSPCampaigns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
