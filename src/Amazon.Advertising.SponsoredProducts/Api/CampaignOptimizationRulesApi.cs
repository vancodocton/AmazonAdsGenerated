/*
 * Sponsored Products
 *
 *
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;

using Amazon.Advertising.SponsoredProducts.Client;
using Amazon.Advertising.SponsoredProducts.Model;

namespace Amazon.Advertising.SponsoredProducts.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICampaignOptimizationRulesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Creates a campaign optimization rule.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateSPCampaignOptimizationRulesResponse</returns>
        CreateSPCampaignOptimizationRulesResponse CreateOptimizationRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPCampaignOptimizationRulesRequest createSPCampaignOptimizationRulesRequest, int operationIndex = 0);

        /// <summary>
        /// Creates a campaign optimization rule.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateSPCampaignOptimizationRulesResponse</returns>
        ApiResponse<CreateSPCampaignOptimizationRulesResponse> CreateOptimizationRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPCampaignOptimizationRulesRequest createSPCampaignOptimizationRulesRequest, int operationIndex = 0);
        /// <summary>
        /// Deletes a campaign optimization rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>DeleteSPCampaignOptimizationRuleResponse</returns>
        DeleteSPCampaignOptimizationRuleResponse DeleteCampaignOptimizationRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0);

        /// <summary>
        /// Deletes a campaign optimization rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of DeleteSPCampaignOptimizationRuleResponse</returns>
        ApiResponse<DeleteSPCampaignOptimizationRuleResponse> DeleteCampaignOptimizationRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0);
        /// <summary>
        /// Gets a campaign optimization rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetSPCampaignOptimizationRuleResponse</returns>
        GetSPCampaignOptimizationRuleResponse GetCampaignOptimizationRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0);

        /// <summary>
        /// Gets a campaign optimization rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetSPCampaignOptimizationRuleResponse</returns>
        ApiResponse<GetSPCampaignOptimizationRuleResponse> GetCampaignOptimizationRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0);
        /// <summary>
        /// Gets a campaign optimization rule recommendation for SP campaigns.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationRecommendationsAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPCampaignOptimizationRecommendationAPIResponse</returns>
        SPCampaignOptimizationRecommendationAPIResponse GetOptimizationRuleEligibility(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationRecommendationsAPIRequest sPCampaignOptimizationRecommendationsAPIRequest, int operationIndex = 0);

        /// <summary>
        /// Gets a campaign optimization rule recommendation for SP campaigns.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationRecommendationsAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPCampaignOptimizationRecommendationAPIResponse</returns>
        ApiResponse<SPCampaignOptimizationRecommendationAPIResponse> GetOptimizationRuleEligibilityWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationRecommendationsAPIRequest sPCampaignOptimizationRecommendationsAPIRequest, int operationIndex = 0);
        /// <summary>
        /// Gets campaign optimization rule state. Recommended refresh frequency is once a day.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationNotificationAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPCampaignOptimizationNotificationAPIResponse</returns>
        SPCampaignOptimizationNotificationAPIResponse GetRuleNotification(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationNotificationAPIRequest sPCampaignOptimizationNotificationAPIRequest, int operationIndex = 0);

        /// <summary>
        /// Gets campaign optimization rule state. Recommended refresh frequency is once a day.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationNotificationAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPCampaignOptimizationNotificationAPIResponse</returns>
        ApiResponse<SPCampaignOptimizationNotificationAPIResponse> GetRuleNotificationWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationNotificationAPIRequest sPCampaignOptimizationNotificationAPIRequest, int operationIndex = 0);
        /// <summary>
        /// Updates a campaign optimization rule.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>UpdateSPCampaignOptimizationRuleResponse</returns>
        UpdateSPCampaignOptimizationRuleResponse UpdateOptimizationRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPCampaignOptimizationRulesRequest updateSPCampaignOptimizationRulesRequest, int operationIndex = 0);

        /// <summary>
        /// Updates a campaign optimization rule.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of UpdateSPCampaignOptimizationRuleResponse</returns>
        ApiResponse<UpdateSPCampaignOptimizationRuleResponse> UpdateOptimizationRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPCampaignOptimizationRulesRequest updateSPCampaignOptimizationRulesRequest, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICampaignOptimizationRulesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Creates a campaign optimization rule.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateSPCampaignOptimizationRulesResponse</returns>
        System.Threading.Tasks.Task<CreateSPCampaignOptimizationRulesResponse> CreateOptimizationRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPCampaignOptimizationRulesRequest createSPCampaignOptimizationRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Creates a campaign optimization rule.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateSPCampaignOptimizationRulesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CreateSPCampaignOptimizationRulesResponse>> CreateOptimizationRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPCampaignOptimizationRulesRequest createSPCampaignOptimizationRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Deletes a campaign optimization rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DeleteSPCampaignOptimizationRuleResponse</returns>
        System.Threading.Tasks.Task<DeleteSPCampaignOptimizationRuleResponse> DeleteCampaignOptimizationRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Deletes a campaign optimization rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DeleteSPCampaignOptimizationRuleResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<DeleteSPCampaignOptimizationRuleResponse>> DeleteCampaignOptimizationRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets a campaign optimization rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetSPCampaignOptimizationRuleResponse</returns>
        System.Threading.Tasks.Task<GetSPCampaignOptimizationRuleResponse> GetCampaignOptimizationRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a campaign optimization rule specified by identifier.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetSPCampaignOptimizationRuleResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetSPCampaignOptimizationRuleResponse>> GetCampaignOptimizationRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets a campaign optimization rule recommendation for SP campaigns.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationRecommendationsAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPCampaignOptimizationRecommendationAPIResponse</returns>
        System.Threading.Tasks.Task<SPCampaignOptimizationRecommendationAPIResponse> GetOptimizationRuleEligibilityAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationRecommendationsAPIRequest sPCampaignOptimizationRecommendationsAPIRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a campaign optimization rule recommendation for SP campaigns.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationRecommendationsAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPCampaignOptimizationRecommendationAPIResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<SPCampaignOptimizationRecommendationAPIResponse>> GetOptimizationRuleEligibilityWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationRecommendationsAPIRequest sPCampaignOptimizationRecommendationsAPIRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets campaign optimization rule state. Recommended refresh frequency is once a day.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationNotificationAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPCampaignOptimizationNotificationAPIResponse</returns>
        System.Threading.Tasks.Task<SPCampaignOptimizationNotificationAPIResponse> GetRuleNotificationAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationNotificationAPIRequest sPCampaignOptimizationNotificationAPIRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets campaign optimization rule state. Recommended refresh frequency is once a day.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationNotificationAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPCampaignOptimizationNotificationAPIResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<SPCampaignOptimizationNotificationAPIResponse>> GetRuleNotificationWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationNotificationAPIRequest sPCampaignOptimizationNotificationAPIRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Updates a campaign optimization rule.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of UpdateSPCampaignOptimizationRuleResponse</returns>
        System.Threading.Tasks.Task<UpdateSPCampaignOptimizationRuleResponse> UpdateOptimizationRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPCampaignOptimizationRulesRequest updateSPCampaignOptimizationRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Updates a campaign optimization rule.
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (UpdateSPCampaignOptimizationRuleResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<UpdateSPCampaignOptimizationRuleResponse>> UpdateOptimizationRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPCampaignOptimizationRulesRequest updateSPCampaignOptimizationRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICampaignOptimizationRulesApi : ICampaignOptimizationRulesApiSync, ICampaignOptimizationRulesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class CampaignOptimizationRulesApi : ICampaignOptimizationRulesApi
    {
        private Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignOptimizationRulesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CampaignOptimizationRulesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignOptimizationRulesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CampaignOptimizationRulesApi(string basePath)
        {
            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                new Amazon.Advertising.SponsoredProducts.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignOptimizationRulesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CampaignOptimizationRulesApi(Amazon.Advertising.SponsoredProducts.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignOptimizationRulesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public CampaignOptimizationRulesApi(Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient client, Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient asyncClient, Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Creates a campaign optimization rule.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CreateSPCampaignOptimizationRulesResponse</returns>
        public CreateSPCampaignOptimizationRulesResponse CreateOptimizationRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPCampaignOptimizationRulesRequest createSPCampaignOptimizationRulesRequest, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateSPCampaignOptimizationRulesResponse> localVarResponse = CreateOptimizationRuleWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPCampaignOptimizationRulesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a campaign optimization rule.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CreateSPCampaignOptimizationRulesResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateSPCampaignOptimizationRulesResponse> CreateOptimizationRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPCampaignOptimizationRulesRequest createSPCampaignOptimizationRulesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->CreateOptimizationRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->CreateOptimizationRule");
            }

            // verify the required parameter 'createSPCampaignOptimizationRulesRequest' is set
            if (createSPCampaignOptimizationRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'createSPCampaignOptimizationRulesRequest' when calling CampaignOptimizationRulesApi->CreateOptimizationRule");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.optimizationrules.v1+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = createSPCampaignOptimizationRulesRequest;

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.CreateOptimizationRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<CreateSPCampaignOptimizationRulesResponse>("/sp/rules/campaignOptimization", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateOptimizationRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a campaign optimization rule.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CreateSPCampaignOptimizationRulesResponse</returns>
        public async System.Threading.Tasks.Task<CreateSPCampaignOptimizationRulesResponse> CreateOptimizationRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPCampaignOptimizationRulesRequest createSPCampaignOptimizationRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateSPCampaignOptimizationRulesResponse> localVarResponse = await CreateOptimizationRuleWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPCampaignOptimizationRulesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a campaign optimization rule.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="createSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CreateSPCampaignOptimizationRulesResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<CreateSPCampaignOptimizationRulesResponse>> CreateOptimizationRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, CreateSPCampaignOptimizationRulesRequest createSPCampaignOptimizationRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->CreateOptimizationRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->CreateOptimizationRule");
            }

            // verify the required parameter 'createSPCampaignOptimizationRulesRequest' is set
            if (createSPCampaignOptimizationRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'createSPCampaignOptimizationRulesRequest' when calling CampaignOptimizationRulesApi->CreateOptimizationRule");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.optimizationrules.v1+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = createSPCampaignOptimizationRulesRequest;

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.CreateOptimizationRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<CreateSPCampaignOptimizationRulesResponse>("/sp/rules/campaignOptimization", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateOptimizationRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes a campaign optimization rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>DeleteSPCampaignOptimizationRuleResponse</returns>
        public DeleteSPCampaignOptimizationRuleResponse DeleteCampaignOptimizationRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<DeleteSPCampaignOptimizationRuleResponse> localVarResponse = DeleteCampaignOptimizationRuleWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Deletes a campaign optimization rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of DeleteSPCampaignOptimizationRuleResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<DeleteSPCampaignOptimizationRuleResponse> DeleteCampaignOptimizationRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->DeleteCampaignOptimizationRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->DeleteCampaignOptimizationRule");
            }

            // verify the required parameter 'campaignOptimizationId' is set
            if (campaignOptimizationId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'campaignOptimizationId' when calling CampaignOptimizationRulesApi->DeleteCampaignOptimizationRule");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignOptimizationId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignOptimizationId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.DeleteCampaignOptimizationRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Delete<DeleteSPCampaignOptimizationRuleResponse>("/sp/rules/campaignOptimization/{campaignOptimizationId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteCampaignOptimizationRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes a campaign optimization rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DeleteSPCampaignOptimizationRuleResponse</returns>
        public async System.Threading.Tasks.Task<DeleteSPCampaignOptimizationRuleResponse> DeleteCampaignOptimizationRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<DeleteSPCampaignOptimizationRuleResponse> localVarResponse = await DeleteCampaignOptimizationRuleWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Deletes a campaign optimization rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DeleteSPCampaignOptimizationRuleResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<DeleteSPCampaignOptimizationRuleResponse>> DeleteCampaignOptimizationRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->DeleteCampaignOptimizationRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->DeleteCampaignOptimizationRule");
            }

            // verify the required parameter 'campaignOptimizationId' is set
            if (campaignOptimizationId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'campaignOptimizationId' when calling CampaignOptimizationRulesApi->DeleteCampaignOptimizationRule");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignOptimizationId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignOptimizationId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.DeleteCampaignOptimizationRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<DeleteSPCampaignOptimizationRuleResponse>("/sp/rules/campaignOptimization/{campaignOptimizationId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteCampaignOptimizationRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets a campaign optimization rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetSPCampaignOptimizationRuleResponse</returns>
        public GetSPCampaignOptimizationRuleResponse GetCampaignOptimizationRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPCampaignOptimizationRuleResponse> localVarResponse = GetCampaignOptimizationRuleWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets a campaign optimization rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetSPCampaignOptimizationRuleResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPCampaignOptimizationRuleResponse> GetCampaignOptimizationRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->GetCampaignOptimizationRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->GetCampaignOptimizationRule");
            }

            // verify the required parameter 'campaignOptimizationId' is set
            if (campaignOptimizationId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'campaignOptimizationId' when calling CampaignOptimizationRulesApi->GetCampaignOptimizationRule");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignOptimizationId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignOptimizationId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.GetCampaignOptimizationRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<GetSPCampaignOptimizationRuleResponse>("/sp/rules/campaignOptimization/{campaignOptimizationId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCampaignOptimizationRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets a campaign optimization rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetSPCampaignOptimizationRuleResponse</returns>
        public async System.Threading.Tasks.Task<GetSPCampaignOptimizationRuleResponse> GetCampaignOptimizationRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPCampaignOptimizationRuleResponse> localVarResponse = await GetCampaignOptimizationRuleWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets a campaign optimization rule specified by identifier.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="campaignOptimizationId">The sp campaign optimization rule identifier.</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetSPCampaignOptimizationRuleResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<GetSPCampaignOptimizationRuleResponse>> GetCampaignOptimizationRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, string campaignOptimizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->GetCampaignOptimizationRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->GetCampaignOptimizationRule");
            }

            // verify the required parameter 'campaignOptimizationId' is set
            if (campaignOptimizationId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'campaignOptimizationId' when calling CampaignOptimizationRulesApi->GetCampaignOptimizationRule");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("campaignOptimizationId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(campaignOptimizationId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.GetCampaignOptimizationRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<GetSPCampaignOptimizationRuleResponse>("/sp/rules/campaignOptimization/{campaignOptimizationId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCampaignOptimizationRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets a campaign optimization rule recommendation for SP campaigns.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationRecommendationsAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPCampaignOptimizationRecommendationAPIResponse</returns>
        public SPCampaignOptimizationRecommendationAPIResponse GetOptimizationRuleEligibility(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationRecommendationsAPIRequest sPCampaignOptimizationRecommendationsAPIRequest, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPCampaignOptimizationRecommendationAPIResponse> localVarResponse = GetOptimizationRuleEligibilityWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationRecommendationsAPIRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets a campaign optimization rule recommendation for SP campaigns.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationRecommendationsAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPCampaignOptimizationRecommendationAPIResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPCampaignOptimizationRecommendationAPIResponse> GetOptimizationRuleEligibilityWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationRecommendationsAPIRequest sPCampaignOptimizationRecommendationsAPIRequest, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->GetOptimizationRuleEligibility");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->GetOptimizationRuleEligibility");
            }

            // verify the required parameter 'sPCampaignOptimizationRecommendationsAPIRequest' is set
            if (sPCampaignOptimizationRecommendationsAPIRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sPCampaignOptimizationRecommendationsAPIRequest' when calling CampaignOptimizationRulesApi->GetOptimizationRuleEligibility");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.optimizationrules.v1+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sPCampaignOptimizationRecommendationsAPIRequest;

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.GetOptimizationRuleEligibility";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SPCampaignOptimizationRecommendationAPIResponse>("/sp/rules/campaignOptimization/eligibility", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetOptimizationRuleEligibility", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets a campaign optimization rule recommendation for SP campaigns.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationRecommendationsAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPCampaignOptimizationRecommendationAPIResponse</returns>
        public async System.Threading.Tasks.Task<SPCampaignOptimizationRecommendationAPIResponse> GetOptimizationRuleEligibilityAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationRecommendationsAPIRequest sPCampaignOptimizationRecommendationsAPIRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPCampaignOptimizationRecommendationAPIResponse> localVarResponse = await GetOptimizationRuleEligibilityWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationRecommendationsAPIRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets a campaign optimization rule recommendation for SP campaigns.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationRecommendationsAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPCampaignOptimizationRecommendationAPIResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPCampaignOptimizationRecommendationAPIResponse>> GetOptimizationRuleEligibilityWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationRecommendationsAPIRequest sPCampaignOptimizationRecommendationsAPIRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->GetOptimizationRuleEligibility");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->GetOptimizationRuleEligibility");
            }

            // verify the required parameter 'sPCampaignOptimizationRecommendationsAPIRequest' is set
            if (sPCampaignOptimizationRecommendationsAPIRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sPCampaignOptimizationRecommendationsAPIRequest' when calling CampaignOptimizationRulesApi->GetOptimizationRuleEligibility");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.optimizationrules.v1+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sPCampaignOptimizationRecommendationsAPIRequest;

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.GetOptimizationRuleEligibility";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SPCampaignOptimizationRecommendationAPIResponse>("/sp/rules/campaignOptimization/eligibility", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetOptimizationRuleEligibility", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets campaign optimization rule state. Recommended refresh frequency is once a day.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationNotificationAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SPCampaignOptimizationNotificationAPIResponse</returns>
        public SPCampaignOptimizationNotificationAPIResponse GetRuleNotification(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationNotificationAPIRequest sPCampaignOptimizationNotificationAPIRequest, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPCampaignOptimizationNotificationAPIResponse> localVarResponse = GetRuleNotificationWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationNotificationAPIRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets campaign optimization rule state. Recommended refresh frequency is once a day.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationNotificationAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SPCampaignOptimizationNotificationAPIResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPCampaignOptimizationNotificationAPIResponse> GetRuleNotificationWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationNotificationAPIRequest sPCampaignOptimizationNotificationAPIRequest, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->GetRuleNotification");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->GetRuleNotification");
            }

            // verify the required parameter 'sPCampaignOptimizationNotificationAPIRequest' is set
            if (sPCampaignOptimizationNotificationAPIRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sPCampaignOptimizationNotificationAPIRequest' when calling CampaignOptimizationRulesApi->GetRuleNotification");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.optimizationrules.v1+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sPCampaignOptimizationNotificationAPIRequest;

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.GetRuleNotification";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SPCampaignOptimizationNotificationAPIResponse>("/sp/rules/campaignOptimization/state", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRuleNotification", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Gets campaign optimization rule state. Recommended refresh frequency is once a day.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationNotificationAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SPCampaignOptimizationNotificationAPIResponse</returns>
        public async System.Threading.Tasks.Task<SPCampaignOptimizationNotificationAPIResponse> GetRuleNotificationAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationNotificationAPIRequest sPCampaignOptimizationNotificationAPIRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPCampaignOptimizationNotificationAPIResponse> localVarResponse = await GetRuleNotificationWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationNotificationAPIRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Gets campaign optimization rule state. Recommended refresh frequency is once a day.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="sPCampaignOptimizationNotificationAPIRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SPCampaignOptimizationNotificationAPIResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SPCampaignOptimizationNotificationAPIResponse>> GetRuleNotificationWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SPCampaignOptimizationNotificationAPIRequest sPCampaignOptimizationNotificationAPIRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->GetRuleNotification");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->GetRuleNotification");
            }

            // verify the required parameter 'sPCampaignOptimizationNotificationAPIRequest' is set
            if (sPCampaignOptimizationNotificationAPIRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sPCampaignOptimizationNotificationAPIRequest' when calling CampaignOptimizationRulesApi->GetRuleNotification");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.optimizationrules.v1+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sPCampaignOptimizationNotificationAPIRequest;

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.GetRuleNotification";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SPCampaignOptimizationNotificationAPIResponse>("/sp/rules/campaignOptimization/state", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRuleNotification", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates a campaign optimization rule.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>UpdateSPCampaignOptimizationRuleResponse</returns>
        public UpdateSPCampaignOptimizationRuleResponse UpdateOptimizationRule(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPCampaignOptimizationRulesRequest updateSPCampaignOptimizationRulesRequest, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<UpdateSPCampaignOptimizationRuleResponse> localVarResponse = UpdateOptimizationRuleWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPCampaignOptimizationRulesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Updates a campaign optimization rule.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of UpdateSPCampaignOptimizationRuleResponse</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<UpdateSPCampaignOptimizationRuleResponse> UpdateOptimizationRuleWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPCampaignOptimizationRulesRequest updateSPCampaignOptimizationRulesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->UpdateOptimizationRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->UpdateOptimizationRule");
            }

            // verify the required parameter 'updateSPCampaignOptimizationRulesRequest' is set
            if (updateSPCampaignOptimizationRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'updateSPCampaignOptimizationRulesRequest' when calling CampaignOptimizationRulesApi->UpdateOptimizationRule");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.optimizationrules.v1+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = updateSPCampaignOptimizationRulesRequest;

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.UpdateOptimizationRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<UpdateSPCampaignOptimizationRuleResponse>("/sp/rules/campaignOptimization", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateOptimizationRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates a campaign optimization rule.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of UpdateSPCampaignOptimizationRuleResponse</returns>
        public async System.Threading.Tasks.Task<UpdateSPCampaignOptimizationRuleResponse> UpdateOptimizationRuleAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPCampaignOptimizationRulesRequest updateSPCampaignOptimizationRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<UpdateSPCampaignOptimizationRuleResponse> localVarResponse = await UpdateOptimizationRuleWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPCampaignOptimizationRulesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Updates a campaign optimization rule.   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.</param>
        /// <param name="updateSPCampaignOptimizationRulesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (UpdateSPCampaignOptimizationRuleResponse)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<UpdateSPCampaignOptimizationRuleResponse>> UpdateOptimizationRuleWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, UpdateSPCampaignOptimizationRulesRequest updateSPCampaignOptimizationRulesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling CampaignOptimizationRulesApi->UpdateOptimizationRule");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling CampaignOptimizationRulesApi->UpdateOptimizationRule");
            }

            // verify the required parameter 'updateSPCampaignOptimizationRulesRequest' is set
            if (updateSPCampaignOptimizationRulesRequest == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'updateSPCampaignOptimizationRulesRequest' when calling CampaignOptimizationRulesApi->UpdateOptimizationRule");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.optimizationrules.v1+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.optimizationrules.v1+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = updateSPCampaignOptimizationRulesRequest;

            localVarRequestOptions.Operation = "CampaignOptimizationRulesApi.UpdateOptimizationRule";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<UpdateSPCampaignOptimizationRuleResponse>("/sp/rules/campaignOptimization", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateOptimizationRule", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
