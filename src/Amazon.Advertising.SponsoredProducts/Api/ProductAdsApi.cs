/*
 * Sponsored Products
 *
 *  
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Amazon.Advertising.SponsoredProducts.Client;
using Amazon.Advertising.SponsoredProducts.Model;

namespace Amazon.Advertising.SponsoredProducts.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductAdsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsCreateSponsoredProductsProductAdsResponseContent</returns>
        SponsoredProductsCreateSponsoredProductsProductAdsResponseContent CreateSponsoredProductsProductAds(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsProductAdsRequestContent sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsCreateSponsoredProductsProductAdsResponseContent</returns>
        ApiResponse<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent> CreateSponsoredProductsProductAdsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsProductAdsRequestContent sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent</returns>
        SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent DeleteSponsoredProductsProductAds(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent</returns>
        ApiResponse<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent> DeleteSponsoredProductsProductAdsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsProductAdsRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsListSponsoredProductsProductAdsResponseContent</returns>
        SponsoredProductsListSponsoredProductsProductAdsResponseContent ListSponsoredProductsProductAds(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsProductAdsRequestContent? sponsoredProductsListSponsoredProductsProductAdsRequestContent = default(SponsoredProductsListSponsoredProductsProductAdsRequestContent?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsProductAdsRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsListSponsoredProductsProductAdsResponseContent</returns>
        ApiResponse<SponsoredProductsListSponsoredProductsProductAdsResponseContent> ListSponsoredProductsProductAdsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsProductAdsRequestContent? sponsoredProductsListSponsoredProductsProductAdsRequestContent = default(SponsoredProductsListSponsoredProductsProductAdsRequestContent?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent</returns>
        SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent UpdateSponsoredProductsProductAds(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent</returns>
        ApiResponse<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent> UpdateSponsoredProductsProductAdsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductAdsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsCreateSponsoredProductsProductAdsResponseContent</returns>
        System.Threading.Tasks.Task<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent> CreateSponsoredProductsProductAdsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsProductAdsRequestContent sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsCreateSponsoredProductsProductAdsResponseContent)</returns>
        System.Threading.Tasks.Task<ApiResponse<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent>> CreateSponsoredProductsProductAdsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsProductAdsRequestContent sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent</returns>
        System.Threading.Tasks.Task<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent> DeleteSponsoredProductsProductAdsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent)</returns>
        System.Threading.Tasks.Task<ApiResponse<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent>> DeleteSponsoredProductsProductAdsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsProductAdsRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsListSponsoredProductsProductAdsResponseContent</returns>
        System.Threading.Tasks.Task<SponsoredProductsListSponsoredProductsProductAdsResponseContent> ListSponsoredProductsProductAdsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsProductAdsRequestContent? sponsoredProductsListSponsoredProductsProductAdsRequestContent = default(SponsoredProductsListSponsoredProductsProductAdsRequestContent?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsProductAdsRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsListSponsoredProductsProductAdsResponseContent)</returns>
        System.Threading.Tasks.Task<ApiResponse<SponsoredProductsListSponsoredProductsProductAdsResponseContent>> ListSponsoredProductsProductAdsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsProductAdsRequestContent? sponsoredProductsListSponsoredProductsProductAdsRequestContent = default(SponsoredProductsListSponsoredProductsProductAdsRequestContent?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent</returns>
        System.Threading.Tasks.Task<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent> UpdateSponsoredProductsProductAdsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent)</returns>
        System.Threading.Tasks.Task<ApiResponse<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent>> UpdateSponsoredProductsProductAdsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductAdsApi : IProductAdsApiSync, IProductAdsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ProductAdsApi : IProductAdsApi
    {
        private Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductAdsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProductAdsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductAdsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProductAdsApi(string basePath)
        {
            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                new Amazon.Advertising.SponsoredProducts.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductAdsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ProductAdsApi(Amazon.Advertising.SponsoredProducts.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductAdsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ProductAdsApi(Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient client, Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient asyncClient, Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsCreateSponsoredProductsProductAdsResponseContent</returns>
        public SponsoredProductsCreateSponsoredProductsProductAdsResponseContent CreateSponsoredProductsProductAds(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsProductAdsRequestContent sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent> localVarResponse = CreateSponsoredProductsProductAdsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, prefer);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsCreateSponsoredProductsProductAdsResponseContent</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent> CreateSponsoredProductsProductAdsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsProductAdsRequestContent sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductAdsApi->CreateSponsoredProductsProductAds");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductAdsApi->CreateSponsoredProductsProductAds");
            }

            // verify the required parameter 'sponsoredProductsCreateSponsoredProductsProductAdsRequestContent' is set
            if (sponsoredProductsCreateSponsoredProductsProductAdsRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsCreateSponsoredProductsProductAdsRequestContent' when calling ProductAdsApi->CreateSponsoredProductsProductAds");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spProductAd.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spProductAd.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = sponsoredProductsCreateSponsoredProductsProductAdsRequestContent;

            localVarRequestOptions.Operation = "ProductAdsApi.CreateSponsoredProductsProductAds";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent>("/sp/productAds", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateSponsoredProductsProductAds", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsCreateSponsoredProductsProductAdsResponseContent</returns>
        public async System.Threading.Tasks.Task<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent> CreateSponsoredProductsProductAdsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsProductAdsRequestContent sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent> localVarResponse = await CreateSponsoredProductsProductAdsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, prefer, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsCreateSponsoredProductsProductAdsResponseContent)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent>> CreateSponsoredProductsProductAdsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsProductAdsRequestContent sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductAdsApi->CreateSponsoredProductsProductAds");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductAdsApi->CreateSponsoredProductsProductAds");
            }

            // verify the required parameter 'sponsoredProductsCreateSponsoredProductsProductAdsRequestContent' is set
            if (sponsoredProductsCreateSponsoredProductsProductAdsRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsCreateSponsoredProductsProductAdsRequestContent' when calling ProductAdsApi->CreateSponsoredProductsProductAds");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spProductAd.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spProductAd.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = sponsoredProductsCreateSponsoredProductsProductAdsRequestContent;

            localVarRequestOptions.Operation = "ProductAdsApi.CreateSponsoredProductsProductAds";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent>("/sp/productAds", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateSponsoredProductsProductAds", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent</returns>
        public SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent DeleteSponsoredProductsProductAds(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent> localVarResponse = DeleteSponsoredProductsProductAdsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent> DeleteSponsoredProductsProductAdsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductAdsApi->DeleteSponsoredProductsProductAds");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductAdsApi->DeleteSponsoredProductsProductAds");
            }

            // verify the required parameter 'sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent' is set
            if (sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent' when calling ProductAdsApi->DeleteSponsoredProductsProductAds");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spProductAd.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spProductAd.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent;

            localVarRequestOptions.Operation = "ProductAdsApi.DeleteSponsoredProductsProductAds";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent>("/sp/productAds/delete", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteSponsoredProductsProductAds", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent</returns>
        public async System.Threading.Tasks.Task<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent> DeleteSponsoredProductsProductAdsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent> localVarResponse = await DeleteSponsoredProductsProductAdsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent>> DeleteSponsoredProductsProductAdsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductAdsApi->DeleteSponsoredProductsProductAds");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductAdsApi->DeleteSponsoredProductsProductAds");
            }

            // verify the required parameter 'sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent' is set
            if (sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent' when calling ProductAdsApi->DeleteSponsoredProductsProductAds");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spProductAd.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spProductAd.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent;

            localVarRequestOptions.Operation = "ProductAdsApi.DeleteSponsoredProductsProductAds";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent>("/sp/productAds/delete", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteSponsoredProductsProductAds", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsProductAdsRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsListSponsoredProductsProductAdsResponseContent</returns>
        public SponsoredProductsListSponsoredProductsProductAdsResponseContent ListSponsoredProductsProductAds(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsProductAdsRequestContent? sponsoredProductsListSponsoredProductsProductAdsRequestContent = default(SponsoredProductsListSponsoredProductsProductAdsRequestContent?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsListSponsoredProductsProductAdsResponseContent> localVarResponse = ListSponsoredProductsProductAdsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsProductAdsRequestContent);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsProductAdsRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsListSponsoredProductsProductAdsResponseContent</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsListSponsoredProductsProductAdsResponseContent> ListSponsoredProductsProductAdsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsProductAdsRequestContent? sponsoredProductsListSponsoredProductsProductAdsRequestContent = default(SponsoredProductsListSponsoredProductsProductAdsRequestContent?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductAdsApi->ListSponsoredProductsProductAds");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductAdsApi->ListSponsoredProductsProductAds");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spProductAd.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spProductAd.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sponsoredProductsListSponsoredProductsProductAdsRequestContent;

            localVarRequestOptions.Operation = "ProductAdsApi.ListSponsoredProductsProductAds";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SponsoredProductsListSponsoredProductsProductAdsResponseContent>("/sp/productAds/list", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSponsoredProductsProductAds", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsProductAdsRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsListSponsoredProductsProductAdsResponseContent</returns>
        public async System.Threading.Tasks.Task<SponsoredProductsListSponsoredProductsProductAdsResponseContent> ListSponsoredProductsProductAdsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsProductAdsRequestContent? sponsoredProductsListSponsoredProductsProductAdsRequestContent = default(SponsoredProductsListSponsoredProductsProductAdsRequestContent?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsListSponsoredProductsProductAdsResponseContent> localVarResponse = await ListSponsoredProductsProductAdsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsProductAdsRequestContent, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;,\&quot;advertiser_campaign_view\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsProductAdsRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsListSponsoredProductsProductAdsResponseContent)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsListSponsoredProductsProductAdsResponseContent>> ListSponsoredProductsProductAdsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsProductAdsRequestContent? sponsoredProductsListSponsoredProductsProductAdsRequestContent = default(SponsoredProductsListSponsoredProductsProductAdsRequestContent?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductAdsApi->ListSponsoredProductsProductAds");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductAdsApi->ListSponsoredProductsProductAds");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spProductAd.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spProductAd.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sponsoredProductsListSponsoredProductsProductAdsRequestContent;

            localVarRequestOptions.Operation = "ProductAdsApi.ListSponsoredProductsProductAds";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SponsoredProductsListSponsoredProductsProductAdsResponseContent>("/sp/productAds/list", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSponsoredProductsProductAds", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent</returns>
        public SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent UpdateSponsoredProductsProductAds(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent> localVarResponse = UpdateSponsoredProductsProductAdsWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, prefer);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent> UpdateSponsoredProductsProductAdsWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductAdsApi->UpdateSponsoredProductsProductAds");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductAdsApi->UpdateSponsoredProductsProductAds");
            }

            // verify the required parameter 'sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent' is set
            if (sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent' when calling ProductAdsApi->UpdateSponsoredProductsProductAds");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spProductAd.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spProductAd.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent;

            localVarRequestOptions.Operation = "ProductAdsApi.UpdateSponsoredProductsProductAds";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent>("/sp/productAds", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateSponsoredProductsProductAds", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent</returns>
        public async System.Threading.Tasks.Task<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent> UpdateSponsoredProductsProductAdsAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent> localVarResponse = await UpdateSponsoredProductsProductAdsWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, prefer, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent>> UpdateSponsoredProductsProductAdsWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling ProductAdsApi->UpdateSponsoredProductsProductAds");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling ProductAdsApi->UpdateSponsoredProductsProductAds");
            }

            // verify the required parameter 'sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent' is set
            if (sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent' when calling ProductAdsApi->UpdateSponsoredProductsProductAds");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spProductAd.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spProductAd.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent;

            localVarRequestOptions.Operation = "ProductAdsApi.UpdateSponsoredProductsProductAds";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent>("/sp/productAds", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateSponsoredProductsProductAds", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
