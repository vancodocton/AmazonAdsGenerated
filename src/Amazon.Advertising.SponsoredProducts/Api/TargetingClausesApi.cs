/*
 * Sponsored Products
 *
 *  
 *
 * The version of the OpenAPI document: 3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Amazon.Advertising.SponsoredProducts.Client;
using Amazon.Advertising.SponsoredProducts.Model;

namespace Amazon.Advertising.SponsoredProducts.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITargetingClausesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent</returns>
        SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent CreateSponsoredProductsTargetingClauses(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent</returns>
        ApiResponse<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent> CreateSponsoredProductsTargetingClausesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent</returns>
        SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent DeleteSponsoredProductsTargetingClauses(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent</returns>
        ApiResponse<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent> DeleteSponsoredProductsTargetingClausesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsTargetingClausesRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsListSponsoredProductsTargetingClausesResponseContent</returns>
        SponsoredProductsListSponsoredProductsTargetingClausesResponseContent ListSponsoredProductsTargetingClauses(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsTargetingClausesRequestContent? sponsoredProductsListSponsoredProductsTargetingClausesRequestContent = default(SponsoredProductsListSponsoredProductsTargetingClausesRequestContent?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsTargetingClausesRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsListSponsoredProductsTargetingClausesResponseContent</returns>
        ApiResponse<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent> ListSponsoredProductsTargetingClausesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsTargetingClausesRequestContent? sponsoredProductsListSponsoredProductsTargetingClausesRequestContent = default(SponsoredProductsListSponsoredProductsTargetingClausesRequestContent?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent</returns>
        SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent UpdateSponsoredProductsTargetingClauses(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent</returns>
        ApiResponse<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent> UpdateSponsoredProductsTargetingClausesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITargetingClausesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent</returns>
        System.Threading.Tasks.Task<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent> CreateSponsoredProductsTargetingClausesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent)</returns>
        System.Threading.Tasks.Task<ApiResponse<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent>> CreateSponsoredProductsTargetingClausesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent</returns>
        System.Threading.Tasks.Task<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent> DeleteSponsoredProductsTargetingClausesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent)</returns>
        System.Threading.Tasks.Task<ApiResponse<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent>> DeleteSponsoredProductsTargetingClausesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsTargetingClausesRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsListSponsoredProductsTargetingClausesResponseContent</returns>
        System.Threading.Tasks.Task<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent> ListSponsoredProductsTargetingClausesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsTargetingClausesRequestContent? sponsoredProductsListSponsoredProductsTargetingClausesRequestContent = default(SponsoredProductsListSponsoredProductsTargetingClausesRequestContent?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsTargetingClausesRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsListSponsoredProductsTargetingClausesResponseContent)</returns>
        System.Threading.Tasks.Task<ApiResponse<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent>> ListSponsoredProductsTargetingClausesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsTargetingClausesRequestContent? sponsoredProductsListSponsoredProductsTargetingClausesRequestContent = default(SponsoredProductsListSponsoredProductsTargetingClausesRequestContent?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent</returns>
        System.Threading.Tasks.Task<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent> UpdateSponsoredProductsTargetingClausesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        ///   **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </remarks>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent)</returns>
        System.Threading.Tasks.Task<ApiResponse<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent>> UpdateSponsoredProductsTargetingClausesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITargetingClausesApi : ITargetingClausesApiSync, ITargetingClausesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TargetingClausesApi : ITargetingClausesApi
    {
        private Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="TargetingClausesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TargetingClausesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TargetingClausesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TargetingClausesApi(string basePath)
        {
            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                new Amazon.Advertising.SponsoredProducts.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TargetingClausesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public TargetingClausesApi(Amazon.Advertising.SponsoredProducts.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Amazon.Advertising.SponsoredProducts.Client.Configuration.MergeConfigurations(
                Amazon.Advertising.SponsoredProducts.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Amazon.Advertising.SponsoredProducts.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TargetingClausesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public TargetingClausesApi(Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient client, Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient asyncClient, Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Amazon.Advertising.SponsoredProducts.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Amazon.Advertising.SponsoredProducts.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Amazon.Advertising.SponsoredProducts.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent</returns>
        public SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent CreateSponsoredProductsTargetingClauses(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent> localVarResponse = CreateSponsoredProductsTargetingClausesWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, prefer);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent> CreateSponsoredProductsTargetingClausesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling TargetingClausesApi->CreateSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling TargetingClausesApi->CreateSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent' is set
            if (sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent' when calling TargetingClausesApi->CreateSponsoredProductsTargetingClauses");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spTargetingClause.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spTargetingClause.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent;

            localVarRequestOptions.Operation = "TargetingClausesApi.CreateSponsoredProductsTargetingClauses";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent>("/sp/targets", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateSponsoredProductsTargetingClauses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent</returns>
        public async System.Threading.Tasks.Task<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent> CreateSponsoredProductsTargetingClausesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent> localVarResponse = await CreateSponsoredProductsTargetingClausesWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, prefer, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent>> CreateSponsoredProductsTargetingClausesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling TargetingClausesApi->CreateSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling TargetingClausesApi->CreateSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent' is set
            if (sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent' when calling TargetingClausesApi->CreateSponsoredProductsTargetingClauses");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spTargetingClause.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spTargetingClause.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent;

            localVarRequestOptions.Operation = "TargetingClausesApi.CreateSponsoredProductsTargetingClauses";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent>("/sp/targets", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateSponsoredProductsTargetingClauses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent</returns>
        public SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent DeleteSponsoredProductsTargetingClauses(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent> localVarResponse = DeleteSponsoredProductsTargetingClausesWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent> DeleteSponsoredProductsTargetingClausesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling TargetingClausesApi->DeleteSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling TargetingClausesApi->DeleteSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent' is set
            if (sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent' when calling TargetingClausesApi->DeleteSponsoredProductsTargetingClauses");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spTargetingClause.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spTargetingClause.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent;

            localVarRequestOptions.Operation = "TargetingClausesApi.DeleteSponsoredProductsTargetingClauses";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent>("/sp/targets/delete", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteSponsoredProductsTargetingClauses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent</returns>
        public async System.Threading.Tasks.Task<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent> DeleteSponsoredProductsTargetingClausesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent> localVarResponse = await DeleteSponsoredProductsTargetingClausesWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent>> DeleteSponsoredProductsTargetingClausesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling TargetingClausesApi->DeleteSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling TargetingClausesApi->DeleteSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent' is set
            if (sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent' when calling TargetingClausesApi->DeleteSponsoredProductsTargetingClauses");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spTargetingClause.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spTargetingClause.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent;

            localVarRequestOptions.Operation = "TargetingClausesApi.DeleteSponsoredProductsTargetingClauses";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent>("/sp/targets/delete", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteSponsoredProductsTargetingClauses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsTargetingClausesRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsListSponsoredProductsTargetingClausesResponseContent</returns>
        public SponsoredProductsListSponsoredProductsTargetingClausesResponseContent ListSponsoredProductsTargetingClauses(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsTargetingClausesRequestContent? sponsoredProductsListSponsoredProductsTargetingClausesRequestContent = default(SponsoredProductsListSponsoredProductsTargetingClausesRequestContent?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent> localVarResponse = ListSponsoredProductsTargetingClausesWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsTargetingClausesRequestContent);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsTargetingClausesRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsListSponsoredProductsTargetingClausesResponseContent</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent> ListSponsoredProductsTargetingClausesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsTargetingClausesRequestContent? sponsoredProductsListSponsoredProductsTargetingClausesRequestContent = default(SponsoredProductsListSponsoredProductsTargetingClausesRequestContent?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling TargetingClausesApi->ListSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling TargetingClausesApi->ListSponsoredProductsTargetingClauses");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spTargetingClause.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spTargetingClause.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sponsoredProductsListSponsoredProductsTargetingClausesRequestContent;

            localVarRequestOptions.Operation = "TargetingClausesApi.ListSponsoredProductsTargetingClauses";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent>("/sp/targets/list", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSponsoredProductsTargetingClauses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsTargetingClausesRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsListSponsoredProductsTargetingClausesResponseContent</returns>
        public async System.Threading.Tasks.Task<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent> ListSponsoredProductsTargetingClausesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsTargetingClausesRequestContent? sponsoredProductsListSponsoredProductsTargetingClausesRequestContent = default(SponsoredProductsListSponsoredProductsTargetingClausesRequestContent?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent> localVarResponse = await ListSponsoredProductsTargetingClausesWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsTargetingClausesRequestContent, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsListSponsoredProductsTargetingClausesRequestContent"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsListSponsoredProductsTargetingClausesResponseContent)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent>> ListSponsoredProductsTargetingClausesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsListSponsoredProductsTargetingClausesRequestContent? sponsoredProductsListSponsoredProductsTargetingClausesRequestContent = default(SponsoredProductsListSponsoredProductsTargetingClausesRequestContent?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling TargetingClausesApi->ListSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling TargetingClausesApi->ListSponsoredProductsTargetingClauses");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spTargetingClause.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/vnd.spTargetingClause.v3+json",
                "application/json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            localVarRequestOptions.Data = sponsoredProductsListSponsoredProductsTargetingClausesRequestContent;

            localVarRequestOptions.Operation = "TargetingClausesApi.ListSponsoredProductsTargetingClauses";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent>("/sp/targets/list", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListSponsoredProductsTargetingClauses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent</returns>
        public SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent UpdateSponsoredProductsTargetingClauses(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0)
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent> localVarResponse = UpdateSponsoredProductsTargetingClausesWithHttpInfo(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, prefer);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent</returns>
        public Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent> UpdateSponsoredProductsTargetingClausesWithHttpInfo(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling TargetingClausesApi->UpdateSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling TargetingClausesApi->UpdateSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent' is set
            if (sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent' when calling TargetingClausesApi->UpdateSponsoredProductsTargetingClauses");
            }

            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spTargetingClause.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spTargetingClause.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent;

            localVarRequestOptions.Operation = "TargetingClausesApi.UpdateSponsoredProductsTargetingClauses";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent>("/sp/targets", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateSponsoredProductsTargetingClauses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent</returns>
        public async System.Threading.Tasks.Task<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent> UpdateSponsoredProductsTargetingClausesAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent> localVarResponse = await UpdateSponsoredProductsTargetingClausesWithHttpInfoAsync(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, prefer, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///    **Requires one of these permissions**: [\&quot;advertiser_campaign_edit\&quot;]
        /// </summary>
        /// <exception cref="Amazon.Advertising.SponsoredProducts.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="amazonAdvertisingAPIClientId">The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.</param>
        /// <param name="amazonAdvertisingAPIScope">The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.</param>
        /// <param name="sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"></param>
        /// <param name="prefer">The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent)</returns>
        public async System.Threading.Tasks.Task<Amazon.Advertising.SponsoredProducts.Client.ApiResponse<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent>> UpdateSponsoredProductsTargetingClausesWithHttpInfoAsync(string amazonAdvertisingAPIClientId, string amazonAdvertisingAPIScope, SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, string? prefer = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'amazonAdvertisingAPIClientId' is set
            if (amazonAdvertisingAPIClientId == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIClientId' when calling TargetingClausesApi->UpdateSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'amazonAdvertisingAPIScope' is set
            if (amazonAdvertisingAPIScope == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'amazonAdvertisingAPIScope' when calling TargetingClausesApi->UpdateSponsoredProductsTargetingClauses");
            }

            // verify the required parameter 'sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent' is set
            if (sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent == null)
            {
                throw new Amazon.Advertising.SponsoredProducts.Client.ApiException(400, "Missing required parameter 'sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent' when calling TargetingClausesApi->UpdateSponsoredProductsTargetingClauses");
            }


            Amazon.Advertising.SponsoredProducts.Client.RequestOptions localVarRequestOptions = new Amazon.Advertising.SponsoredProducts.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/vnd.spTargetingClause.v3+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/vnd.spTargetingClause.v3+json"
            };

            var localVarContentType = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Amazon.Advertising.SponsoredProducts.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-ClientId", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIClientId)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Amazon-Advertising-API-Scope", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(amazonAdvertisingAPIScope)); // header parameter
            if (prefer != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Prefer", Amazon.Advertising.SponsoredProducts.Client.ClientUtils.ParameterToString(prefer)); // header parameter
            }
            localVarRequestOptions.Data = sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent;

            localVarRequestOptions.Operation = "TargetingClausesApi.UpdateSponsoredProductsTargetingClauses";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent>("/sp/targets", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateSponsoredProductsTargetingClauses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
